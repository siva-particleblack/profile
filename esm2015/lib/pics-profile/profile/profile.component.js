import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { AppConstants } from '../@core/constants/app-constants';
import { AlertService } from '../@core/service/alert.service';
import { ThemeService } from '../@core/service/theme.service';
import { CustomValidator } from '../@core/validator/custom-validator';
import { fontSetList, themeList } from '../@core/constants/theme-constants';
import { LocalService } from '../@core/service/local.service';
import { RBACINFO } from '../@core/urls/rbac-url.config';
import { NavigationStart } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "../@core/service/auth.service";
import * as i2 from "@angular/forms";
import * as i3 from "../../profile.service";
import * as i4 from "../@core/service/attachments.service";
import * as i5 from "../@core/service/data-store.service";
import * as i6 from "primeng/api";
import * as i7 from "../../profile-update.service";
import * as i8 from "@angular/router";
import * as i9 from "../@core/service/navigation-alert.service";
import * as i10 from "../@shared/alert/alert.component";
import * as i11 from "@angular/common";
import * as i12 from "primeng/tooltip";
import * as i13 from "primeng/inputtext";
export class ProfileComponent {
    constructor(injector, authService, formBuilder, profileService, attachmentService, _storeservice, confirmationService, profileUpdateService, router, navigationAlertService) {
        this.authService = authService;
        this.formBuilder = formBuilder;
        this.profileService = profileService;
        this.attachmentService = attachmentService;
        this._storeservice = _storeservice;
        this.confirmationService = confirmationService;
        this.profileUpdateService = profileUpdateService;
        this.router = router;
        this.navigationAlertService = navigationAlertService;
        this.isValid = false;
        this.currentDate = new Date();
        this.themes = [];
        this.fontSetList = [];
        this.RBACORG = new RBACINFO();
        this.errors = AppConstants.errorList;
        this.currentTab = "#v-pills-home";
        this.localstorage = injector.get(LocalService);
        this.alertService = injector.get(AlertService);
        this.themeService = injector.get(ThemeService);
        this.userid = sessionStorage.getItem('id');
        const tab = this.localstorage.getItem('CURRENT_PROFILE_TAB');
        this.getTab(tab);
        this.selectedTheme = this.localstorage.getItem('SELECTED_THEME') || 'default';
        this.selectedFont = this.localstorage.getItem('SELECTED_FONT') || '13';
        this.themes = themeList;
        this.fontSetList = fontSetList;
        this.initializeResetPasswordForm();
        this.initializeForm();
    }
    ngOnInit() {
        let shouldNavigate = true;
        this.setFlag(false);
        this.router.events.subscribe(event => {
            if (event instanceof NavigationStart) {
                this.routeTo = event === null || event === void 0 ? void 0 : event.url;
                const shouldPreventNavigation = true;
                if (this.navigationAlertService.getFlag() && shouldPreventNavigation) {
                    this.router.navigate([], { skipLocationChange: true });
                    $('#UpdateUserTheme').modal('show');
                }
            }
        });
        this.orgSubs = this._storeservice.currentStore.subscribe((res) => {
            if (res['RBACORG'] && res['RBACORG'] !== '') {
                this.RBACORG = res['RBACORG'];
                console.log(this.RBACORG, 'RBACORG Profile');
                this.environment = this.RBACORG['environment'];
                this.orgId = parseInt(this.RBACORG['orgID']);
                this.httpService = res['HTTPSERVICE'];
                if (this.environment) {
                    this.getUserInfo();
                    this.fontSlider();
                    this.getUserTheme();
                }
            }
        });
    }
    updateThemePopup() {
        this.updateStyling();
        // this.setFlag(false);
        $('#UpdateUserTheme').modal('hide');
        this.router.navigateByUrl(this.routeTo);
    }
    cancleThemePopup() {
        this.getUserTheme();
        // this.setFlag(false);
        $('#UpdateUserTheme').modal('hide');
    }
    getTab(tab) {
        if (tab && tab.trim() && tab != "#v-pills-home") {
            this.currentTab = tab;
            this.isProfileActive = false;
            this.isThemeActive = true;
            this.isProfileShown = false;
            this.isThemeShown = true;
        }
        else {
            this.currentTab = "#v-pills-home";
            this.isThemeActive = false;
            this.isProfileActive = true;
            this.isThemeShown = false;
            this.isProfileShown = true;
        }
    }
    setCurrentTab(tab) {
        this.currentTab = tab;
        this.localstorage.setItem('CURRENT_PROFILE_TAB', tab);
    }
    setFlag(flag) {
        this.navigationAlertService.setFlag(flag);
    }
    initializeResetPasswordForm() {
        this.resetPasswordForm = this.formBuilder.group({
            id: sessionStorage.getItem('id'),
            mailid: sessionStorage.getItem('email'),
            currentpassword: ['', Validators.required],
            newpassword: [
                '',
                Validators.compose([
                    Validators.required,
                    CustomValidator.patternValidator(/\d/, { hasNumber: true }),
                    CustomValidator.patternValidator(/[A-Z]/, { hasCapitalCase: true }),
                    CustomValidator.patternValidator(/[a-z]/, { hasSmallCase: true }),
                    CustomValidator.patternValidator(/[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/, { hasSpecialCharacters: true }),
                    Validators.minLength(8)
                ])
            ],
            conformpassword: ['', Validators.required]
        });
    }
    initializeForm() {
        this.userForm = this.formBuilder.group({
            firstname: ['', Validators.required],
            middlename: [''],
            lastname: ['', Validators.required],
            username: ['', Validators.required],
            // dob: [''],
            email: ['', [Validators.required, Validators.pattern(AppConstants.regexEmail)]],
        });
    }
    get resetFormcontrols() {
        const isInvalid = this.resetPasswordForm.controls['newpassword'].status;
        const newpassword = this.resetPasswordForm.value['newpassword'];
        const conformpassword = this.resetPasswordForm.value['conformpassword'];
        if (isInvalid === 'INVALID' && newpassword !== '') {
            this.isValid = true;
        }
        else {
            this.isValid = false;
        }
        if (newpassword !== conformpassword) {
            this.resetPasswordForm.get('conformpassword').setErrors({ NoPassswordMatch: true });
        }
        return this.resetPasswordForm.controls;
    }
    getUserInfo() {
        this.profileService.getAllUserList(this.userid).subscribe((res) => {
            var _a, _b;
            const patchValuedata = res.data;
            this.thumbnail = ((_b = (_a = patchValuedata.additionalinfo) === null || _a === void 0 ? void 0 : _a.thumbnail) === null || _b === void 0 ? void 0 : _b.url) || '';
            this.userForm.patchValue({
                firstname: patchValuedata.firstname,
                middlename: patchValuedata.middlename,
                lastname: patchValuedata.lastname,
                username: patchValuedata.username,
                // dob: new Date(patchValuedata.dob),
                email: patchValuedata.email
            });
        });
    }
    handleFileInput(fileValue) {
        const target = fileValue.target;
        const file = target.files[0];
        this.uploadedFile = fileValue.target.files[0].name;
        this.imageData = {
            contentType: fileValue.target.files[0].type,
            fileName: `user-profileimage/${this.userid}/${this.uploadedFile.replaceAll(' ', '')}`
        };
        if (this.validateImage(fileValue.target.files)) {
            this.attachmentService.uploadKey(this.imageData).subscribe((res) => {
                this.urlPath = res.data;
                const uploadAttachment = document.getElementById('file');
                const uploadAttachmentDetails = uploadAttachment.files[0];
                this.httpService.putUpload(this.urlPath, uploadAttachmentDetails, uploadAttachmentDetails.type).subscribe((_resp) => {
                    this.alertService.success('Profile Image uploaded successfully.');
                    const reader = new FileReader();
                    reader.onload = () => {
                        this.thumbnail = reader.result;
                    };
                    reader.readAsDataURL(file);
                    this.attachType = fileValue.target.files[0].type;
                }, error => {
                    if (error.status == 0) {
                        this.alertService.error(AppConstants.errorMessage);
                        this.uploadedFile = '';
                        this.urlPath = '';
                    }
                });
            }, _error => {
                this.alertService.error(AppConstants.errorMessage);
            });
        }
    }
    updateprofile() {
        const userData = this.userForm.getRawValue();
        // userData.dob = new DatePipe('en-US').transform(userData.dob, 'YYYY-MM-dd');
        if (this.uploadedFile) {
            userData.additionalinfo = {
                photo: this.imageData,
                thumbnail: this.imageData
            };
        }
        this.profileService.updateUser(userData, this.userid).subscribe(() => {
            this.profileService.getProfile({
                url: this.thumbnail,
                name: this.userForm.value.firstname
            });
            this.alertService.success('Profile updated successfully');
            this.profileUpdateService.updateProfilePicture(this.thumbnail);
        });
    }
    updateStyling() {
        const body = {
            type: 'USER_THEME_PREFERENCES',
            mappedid: this.userid,
            config: JSON.stringify({ theme: this.selectedTheme, font: this.selectedFont })
        };
        this.alertService.success('Theme changes saved successfully.');
        this.setFlag(false);
        this.profileService.saveUserPreference(body).subscribe(() => {
            // this.setFlag(false);
        });
    }
    getUserTheme() {
        this.profileService.getUserPreference(this.userid).subscribe((res) => {
            const data = res.data;
            const config = JSON.parse(data === null || data === void 0 ? void 0 : data.config);
            this.selectedTheme = (config === null || config === void 0 ? void 0 : config.theme) || 'default';
            this.selectedFont = (config === null || config === void 0 ? void 0 : config.font) || '13';
            this.localstorage.setItem('SELECTED_FONT', this.selectedFont);
            this.localstorage.setItem('SELECTED_THEME', this.selectedTheme);
        });
    }
    setTheme(event) {
        this.profileService.setTheme(event);
        this.setFlag(true);
    }
    setFont(event) {
        this.profileService.setFont(event);
        this.setFlag(true);
    }
    setRangeFont(modal) {
        this.profileService.setRangeFont(modal);
        this.setFlag(true);
    }
    changePassword() {
        const obj = {
            id: Number(this.resetPasswordForm.value['id']),
            currentpassword: this.resetPasswordForm.value['currentpassword'],
            newpassword: this.resetPasswordForm.value['newpassword']
        };
        this.authService.ResetPassword(obj).subscribe(_res => {
            this.authService.logout();
            this.alertService.success('Password Changed Successfully');
        }, _error => this.alertService.error('Something went wrong'));
    }
    validateImage(file) {
        const fileSize = Number(file[0].size) / 1024;
        const filetype = file[0].type.replace('image/', '');
        if (filetype === 'jpg' || filetype === 'jpeg' || filetype === 'png' || filetype === 'gif') {
            if (fileSize < 50) {
                return true;
            }
            else {
                this.alertService.warn('File is bigger than 50 KB');
                return false;
            }
        }
        else {
            this.alertService.warn(`${filetype} format is not supported`);
            return false;
        }
    }
    clearForm() {
        this.userForm.controls['firstname'].reset();
        this.userForm.controls['middlename'].reset();
        this.userForm.controls['lastname'].reset();
        this.thumbnail = '';
    }
    onClickRemove() {
        $('#Deleteuser').modal('show');
    }
    cancel() {
        // this.userForm.reset();
        this.userForm.enable();
    }
    removeThumbnail() {
        // this.confirmationService.confirm({
        //   target: event.target as EventTarget,
        //   message: 'Are you sure you want to proceed?',
        //   icon: 'pi pi-exclamation-triangle',
        //   accept: () => {
        this.cancel();
        this.thumbnail = '';
        this.alertService.success('Profile image deleted successfully.');
        $('#Deleteuser').modal('hide');
        //   },
        //   reject: () => {
        //       // reject message
        //   }
        // });
    }
    ngOnDestroy() {
        if (this.socketSubscription) {
            this.socketSubscription.unsubscribe();
        }
        this.orgSubs.unsubscribe();
    }
    fontSlider() {
        const rangeSlider = document.getElementById('rs-range-line');
        const rangeBullet = document.getElementById('rs-bullet');
        rangeSlider.addEventListener('input', showSliderValue, false);
        function showSliderValue() {
            rangeBullet.innerHTML = rangeSlider.value;
            const bulletPosition = (Number(rangeSlider.value) / Number(rangeSlider.max));
            rangeBullet.style.left = (bulletPosition * 578) + 'px';
        }
    }
}
ProfileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProfileComponent, deps: [{ token: i0.Injector }, { token: i1.AuthService }, { token: i2.FormBuilder }, { token: i3.ProfileService }, { token: i4.AttachmentsService }, { token: i5.DataStoreService }, { token: i6.ConfirmationService }, { token: i7.ProfileUpdateService }, { token: i8.Router }, { token: i9.NavigationAlertService }], target: i0.ɵɵFactoryTarget.Component });
ProfileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ProfileComponent, selector: "core-profile", ngImport: i0, template: "<app-alert></app-alert>\r\n<div class=\"card w-100 profile\">\r\n  <div class=\"container-group h-100\" [formGroup]=\"userForm\">\r\n    <div class=\"left-container\">\r\n      <div class=\"nav flex-column nav-pills py-4 px-3\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        <a class=\"nav-link d-flex align-items-center mb-3\" [class.active]=\"isProfileActive\" id=\"v-pills-home-tab\" data-toggle=\"pill\"\r\n          [href]=\"currentTab\" (click)=\"setCurrentTab('#v-pills-home')\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">person</span>\r\n          Edit Profile\r\n        </a>\r\n        <!-- <a class=\"nav-link d-flex align-items-center mb-3\" id=\"v-pills-profile-tab\" data-toggle=\"pill\"\r\n          href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">lock_open</span>\r\n          Change Password\r\n        </a> -->\r\n        <a class=\"nav-link d-flex align-items-center\" [class.active]=\"isThemeActive\" (click)=\"setCurrentTab('#theme_tab')\" id=\"v-theme-a\" data-toggle=\"pill\" [href]=\"currentTab\" role=\"tab\"\r\n          aria-controls=\"theme_tab\" aria-selected=\"false\">\r\n          <span class=\"material-icon material-symbols-outlined mr-2\">palette</span>\r\n          Theme\r\n        </a>\r\n      </div>\r\n    </div>\r\n    <div class=\"right-container\">\r\n      <div class=\"tab-content py-4 px-4\" id=\"v-pills-tabContent\">\r\n        <!-- Edit Profile Tab -->\r\n        <div class=\"tab-pane fade\" [class.active]=\"isProfileActive\" [class.show]=\"isProfileShown\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\r\n          <div class=\"strip_head toggleleft mb-3\">\r\n            <span class=\"report_head font-weight-bold\">Edit Profile</span>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid pic-upload-group row justify-content-md-center\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 text-center\">\r\n              <figure class=\"mt-2 mb-2 pic-upload justify-content-md-center\">\r\n                <img width=\"64\" class=\"rounded-circle border\" [src]=\"thumbnail || 'assets/images/user-empty.png'\"\r\n                  alt=\"upload\" />\r\n                <input type=\"file\" id=\"file\" aria-hidden=\"true\" style=\"visibility: hidden; display: none\"\r\n                  (change)=\"handleFileInput($event)\" />\r\n                  <div class=\"mt-1\">\r\n                    <label\r\n                      for=\"file\"\r\n                      role=\"button\"\r\n                      class=\"material-icon material-symbols-outlined text-primary action-btn\"\r\n                      >edit</label\r\n                    >\r\n                    <span\r\n                      role=\"button\"\r\n                      class=\"material-icon material-symbols-outlined text-danger action-btn\"\r\n                      *ngIf=\"thumbnail\"\r\n                      (click)=\"onClickRemove()\">\r\n                      delete\r\n                    </span>\r\n                    <span\r\n                      class=\"material-icon material-symbols-outlined text-muted action-btn\"\r\n                      pTooltip=\"Image size max 50KB\">\r\n                      Info\r\n                    </span>\r\n                  </div>\r\n              </figure>\r\n              \r\n            </div>\r\n          </div>\r\n          <!-- <p-confirmPopup></p-confirmPopup> -->\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"fname\" class=\"referral-form-labels\">\r\n                First Name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"fname\" type=\"text\" formControlName=\"firstname\" placeholder=\"Enter First Name\"\r\n                aria-describedby=\"fname\" pInputText />\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"mname\" class=\"referral-form-labels\">Middle Name </label>\r\n              <input id=\"mname\" type=\"text\" placeholder=\"Enter Middle Name\" formControlName=\"middlename\"\r\n                aria-describedby=\"mname\" pInputText />\r\n            </div>\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"lName\" class=\"referral-form-labels\">\r\n                Last Name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"lName\" type=\"text\" placeholder=\"Enter Last Name\" formControlName=\"lastname\" pInputText\r\n                aria-describedby=\"lName\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"userName\" class=\"referral-form-labels\">\r\n                User Name\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"userName\" type=\"text\" readonly=\"true\" placeholder=\"Enter User Name\" formControlName=\"username\"\r\n                aria-describedby=\"userName\" pInputText />\r\n            </div>\r\n            <!-- <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\"> -->\r\n              <!-- <label for=\"dateformat\" class=\"referral-form-labels\">\r\n                DOB -->\r\n                <!-- <span class=\"requiredfield text-danger\">*</span> -->\r\n              <!-- </label>\r\n              <p-calendar\r\n              formControlName=\"dob\"\r\n              placeholder=\"Select Date Of Birth\"\r\n              dateFormat=\"yy-mm-dd\"\r\n              [maxDate]=\"currentDate\"\r\n              fieldKey=\"SETTINGS_USR_DOB\"\r\n              inputId=\"dateformat\"></p-calendar> -->\r\n            <!-- </div> -->\r\n            <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12\">\r\n              <label for=\"usersEmailid\" class=\"referral-form-labels\">\r\n                Email ID\r\n                <span class=\"requiredfield text-danger\">*</span>\r\n              </label>\r\n              <input id=\"usersEmailid\" placeholder=\"Enter Email ID\" formControlName=\"email\" type=\"text\" pInputText\r\n                readonly />\r\n            </div>\r\n          </div>\r\n          <div class=\"p-fluid p-formgrid row\">\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\"></div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12\"></div>\r\n            <div class=\"p-field col-lg-4 col-sm-4 col-md-12 col-12 mb-0\">\r\n              <button class=\"pull-right mr-2 mb-2 btn btn-primary btncommon\" (click)=\"updateprofile()\">\r\n                Save Changes\r\n              </button>\r\n              <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" (click)=\"clearForm()\">\r\n                Clear\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Tab End -->\r\n\r\n        <!-- Change Password Tab -->\r\n        <!-- <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\r\n          <div class=\"strip_head toggleleft mb-4\">\r\n            <span class=\"report_head font-weight-bold\">Change Password</span>\r\n          </div>\r\n          <div [formGroup]=\"resetPasswordForm\" class=\"reset-password-div\">\r\n            <div class=\"p-fluid p-formgrid row\">\r\n              <div class=\"p-field col-xl-4 col-lg-12 col-sm-4 col-md-12 col-12 mb-3\">\r\n                <label for=\"mailid\" aria-describedby=\"mailid\">Email <span class=\"requiredfield\">*</span></label>\r\n                <input type=\"text\" readonly=\"true\" id=\"mailid\" class=\"form-control\" formControlName=\"mailid\"\r\n                  pInputText />\r\n              </div>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid row\">\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-3\">\r\n                <label for=\"cpassword\" aria-describedby=\"cpassword\">Current Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <p-password appBlockcutcopypaste class=\"position-relative\" inputId=\"cpassword\"\r\n                  formControlName=\"currentpassword\" [toggleMask]=\"true\" [feedback]=\"false\">\r\n                </p-password>\r\n                <small *ngIf=\"\r\n                    resetFormcontrols['currentpassword'].hasError('required') &&\r\n                    resetFormcontrols['currentpassword'].touched\r\n                  \" class=\"p-error block\">\r\n                  Required\r\n                </small>\r\n              </div>\r\n\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-3 position-relative\">\r\n                <label for=\"npassword\" aria-describedby=\"npassword\">New Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <p-password class=\"position-relative\" appBlockcutcopypaste inputId=\"npassword\"\r\n                  formControlName=\"newpassword\" [toggleMask]=\"true\" [feedback]=\"false\">\r\n                </p-password>\r\n                <div class=\"autosuggest\" *ngIf=\"isValid\">\r\n                  <div *ngIf=\"\r\n                      resetFormcontrols['newpassword'].hasError('required') && resetFormcontrols['newpassword'].touched\r\n                    \" class=\"p-error d-flex align-items-center mb-2\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    <small>Required</small>\r\n                  </div>\r\n                  <div class=\"p-error d-flex align-items-center mb-2\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('hasNumber')\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    <small>{{ errors[0] }}</small>\r\n                  </div>\r\n                  <div class=\"p-error d-flex align-items-center mb-2\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('hasCapitalCase')\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    <small>{{ errors[2] }}</small>\r\n                  </div>\r\n                  <div class=\"p-error d-flex align-items-center mb-2\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('hasSmallCase')\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    <small>{{ errors[3] }}</small>\r\n                  </div>\r\n                  <small class=\"p-error d-flex align-items-center mb-2\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('hasSpecialCharacters')\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    {{ errors[1] }}\r\n                  </small>\r\n                  <div class=\"p-error d-flex align-items-center mb-2\"\r\n                    *ngIf=\"resetFormcontrols['newpassword'].hasError('minlength')\">\r\n                    <em class=\"pi pi-times-circle mr-1\"></em>\r\n                    <small>{{ errors[4] }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"p-field col-xl-4 col-lg-6 col-sm-4 col-md-12 col-12 mb-2\">\r\n                <label for=\"cnfpassword\" aria-describedby=\"cnfpassword\">Confirm Password <span\r\n                    class=\"requiredfield\">*</span></label>\r\n                <p-password appBlockcutcopypaste class=\"position-relative\" inputId=\"cnfpassword\"\r\n                  formControlName=\"conformpassword\" [toggleMask]=\"true\" [feedback]=\"false\">\r\n                </p-password>\r\n                <div *ngIf=\"\r\n                    resetFormcontrols['conformpassword'].hasError('required') &&\r\n                    resetFormcontrols['conformpassword'].touched\r\n                  \" class=\"p-error block\">\r\n                  <small>Required</small>\r\n                </div>\r\n                <div class=\"p-error block\" *ngIf=\"\r\n                    resetFormcontrols['conformpassword'].hasError('NoPassswordMatch') &&\r\n                    resetFormcontrols['conformpassword'].touched\r\n                  \">\r\n                  <small>Password Does not match</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 mt-2 text-right\">\r\n              <p-button label=\"Save Changes\" styleClass=\"px-3 py-1\" (click)=\"changePassword()\"\r\n                [disabled]=\"resetPasswordForm.invalid\"></p-button>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n        <!-- Tab End -->\r\n\r\n        <!-- Theme Customizer Tab -->\r\n        <div class=\"tab-pane fade\" id=\"theme_tab\" [class.active]=\"isThemeActive\" [class.show]=\"isThemeShown\" role=\"tabpanel\" aria-labelledby=\"v-theme-a\">\r\n          <div class=\"strip_head toggleleft mb-4\">\r\n            <span class=\"report_head font-weight-bold\">Theme Customizer</span>\r\n          </div>\r\n          <div class=\"customizer customizer-styling pt-3\">\r\n            <!-- Skin -->\r\n            <div class=\"customizer-styling-skin skin mb-4\">\r\n              <h6 class=\"font-weight-bold mb-2\">Skin</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center\">\r\n                <div *ngFor=\"let theme of themes\" class=\"custom-control custom-radio mr-4\">\r\n                  <figure [ngClass]=\"selectedTheme === theme.key ? 'active' : ''\">\r\n                    <label role=\"link\" class=\"mb-0 theme-select\" for=\"theme_{{ theme.key }}\">\r\n                      <img src=\"{{ theme.image }}\" class=\"img-fluid\" alt=\"{{ theme.name }}\" />\r\n                    </label>\r\n                    <figcaption>\r\n                      <input type=\"radio\" id=\"theme_{{ theme.key }}\" name=\"{{ theme.name }}\"\r\n                        class=\"custom-control-input layout-name\" [value]=\"theme.key\" [(ngModel)]=\"selectedTheme\"\r\n                        [ngModelOptions]=\"{ standalone: true }\" (click)=\"setTheme(theme.key)\" />\r\n                      <label class=\"custom-control-label mt-2\" for=\"theme_{{ theme.key }}\">{{ theme.name }}</label>\r\n                    </figcaption>\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"customizer-styling-skin d-none mb-3\">\r\n              <h6 class=\"font-weight-bold mb-2\">Font</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center\">\r\n                <div *ngFor=\"let fontSet of fontSetList\" class=\"custom-control custom-radio mr-4\">\r\n                  <figure [ngClass]=\"selectedFont === fontSet.key ? 'active' : ''\">\r\n                    <label for=\"font_{{ fontSet.key }}\" class=\"font-box mb-0 theme-select\"> Aa </label>\r\n                    <figcaption>\r\n                      <input type=\"radio\" id=\"font_{{ fontSet.key }}\" name=\"{{ fontSet.name }}\"\r\n                        class=\"custom-control-input layout-name\" [value]=\"fontSet.key\" [(ngModel)]=\"selectedFont\"\r\n                        [ngModelOptions]=\"{ standalone: true }\" (click)=\"setFont(fontSet.key)\" />\r\n                      <label class=\"custom-control-label mt-2\" for=\"font_{{ fontSet.key }}\">{{ fontSet.name }}</label>\r\n                    </figcaption>\r\n                  </figure>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n\r\n            <div class=\"customizer-styling-skin mb-3\">\r\n              <h6 class=\"font-weight-bold mb-2\">Font Size (<span id=\"rs-bullet\" class=\"rs-label\">{{selectedFont}}</span>)</h6>\r\n              <div class=\"d-flex justify-content-start align-items-center col-lg-4 col-md-4 col-12 p-0\">\r\n                <div class=\"custom-control custom-radio w-100 mr-4\">\r\n                  <div class=\"range-slider\">\r\n                    <input id=\"rs-range-line\" class=\"rs-range\" type=\"range\" #ref value=\"{{selectedFont}}\" min=\"13\" max=\"20\"   [ngModelOptions]=\"{ standalone: true }\" [(ngModel)]=\"selectedFont\" (change)=\"setRangeFont(ref.value)\">\r\n                  </div>\r\n                  <div class=\"box-minmax\">\r\n                    <span>13</span><span>20</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <button class=\"pull-right mr-2 mb-2 btn btn-primary btncommon\" (click)=\"updateStyling()\">Save Changes</button>\r\n        </div>\r\n        \r\n        <!-- Tab End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal\" id=\"Deleteuser\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Delete Profile Image</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        Are you sure you want to delete the Profile Image?\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"mt-2\">\r\n          <button class=\"pull-right mb-2 btn btn-primary btncommon delete\" data-dismiss=\"modal\" (click)=\"removeThumbnail()\">\r\n            Delete\r\n          </button>\r\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\">Cancel</button>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"UpdateUserTheme\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Update Theme</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        Are you sure to save and continue with the recent changes?\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"mt-2\">\r\n          <button class=\"pull-right mb-2 btn btn-primary btncommon delete\" data-dismiss=\"modal\" (click)=\"updateThemePopup()\">\r\n            Yes\r\n          </button>\r\n          <button class=\"pull-right mb-2 mr-2 btn bg-white text-primary btncancel\" data-dismiss=\"modal\" (click)=\"cancleThemePopup()\">No</button>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>", styles: ["@charset \"UTF-8\";.profile .pic-upload{position:relative;display:inline-flex;flex-direction:column;align-items:center}.profile .pic-upload .action-btn{margin-bottom:0;width:25px;height:25px;margin-right:5px;line-height:normal;text-align:center;display:inline-block;vertical-align:middle;font-size:var(--font-24)}.profile .right-container p{color:var(--text-dark)}.profile .autosuggest{position:absolute;top:24px;left:15px;right:15px;bottom:auto;transform:translateY(38px);will-change:transform;min-width:10rem;padding:.5rem;margin:.125rem 0 0;font-size:1rem;color:var(--text-dark);text-align:left;list-style:none;background-color:var(--bg-light);background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;z-index:9;max-height:200px;overflow:auto}.profile .autosuggest li{cursor:pointer;font-size:13px;line-height:35px;border-bottom:solid 1px var(--table-border)}.profile .autosuggest li:hover{color:var(--text-dark)}.profile .autosuggest li:last-child{border-bottom:none}.profile .nav-pills .nav-link{position:relative;color:#767676;background-color:transparent}.profile .nav-pills .nav-link.active{background-color:transparent;color:var(--primary);font-weight:600}.profile .nav-pills .nav-link.active :before{content:\"chevron_right\";font-family:\"Material Icons\";position:absolute;right:0;left:auto}@media screen and (min-width: 1180px){.profile{height:calc(100vh - 100px)}}@media screen and (min-width: 768px){.profile .container-group{display:flex}.profile .container-group .left-container{border-right:1px solid var(--table-border);height:100%;width:280px}.profile .container-group .right-container{height:100%;width:calc(100% - 280px)}.profile .nav-pills .nav-link.active :before{display:block}}@media screen and (max-width: 767px){.container-group .left-container{width:100%}.container-group .left-container .nav-pills{border-bottom:1px solid var(--table-border)}.container-group .right-container{width:100%}.container-group .right-container .tab-pane .strip_head{text-align:center}.container-group .nav-pills .nav-link.active :before{display:none}}.customizer .custom-checkbox.custom-control,.customizer .custom-radio.custom-control{padding-left:0}.customizer .custom-checkbox.custom-control .theme-select,.customizer .custom-radio.custom-control .theme-select{border:2px solid #ddd;border-radius:7px}.customizer .custom-checkbox.custom-control .active .theme-select,.customizer .custom-radio.custom-control .active .theme-select{border-color:var(--primary)}.customizer .custom-checkbox .custom-control-input:checked~.custom-control-label:before,.customizer .custom-radio .custom-control-input:checked~.custom-control-label:before{content:\"\\f00c\";font-family:\"FontAwesome\",sans-serif;color:var(--hover-text);background-color:var(--btn);border-color:var(--btn);font-size:10px;display:flex;align-items:center;padding:2px}.customizer .custom-checkbox label,.customizer .custom-radio label{cursor:pointer}.customizer .custom-checkbox .font-box,.customizer .custom-radio .font-box{display:flex;justify-content:center;align-items:center;width:150px;height:120px;color:var(--text-dark)}.customizer .custom-checkbox .custom-control-label,.customizer .custom-radio .custom-control-label{position:relative;vertical-align:middle;font-size:var(--base-font-size);line-height:normal;color:var(--text-dark);cursor:pointer;padding-left:25px}.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:after{border-color:var(--btn)}.customizer .custom-checkbox .custom-control-label:before,.customizer .custom-checkbox .custom-control-label:after,.customizer .custom-radio .custom-control-label:before,.customizer .custom-radio .custom-control-label:after{background-image:none;width:16px;height:16px;left:0;box-shadow:none;top:0}.customizer hr{border-color:var(--table-border)}.customizer .customizer-header{background:var(--background-color);color:var(--text-dark)}.customizer .customizer-header .customizer-close{position:absolute;right:.6rem;top:.6rem;padding:7px;width:auto;z-index:10;color:var(--text-dark);cursor:pointer}.customizer .customizer-header .customizer-close .material-icon{font-size:1.5rem}.customizer .customizer-header .customizer-close:hover{color:var(--btn)}.customizer h4{font-size:var(--font-15);font-weight:600;color:var(--text-dark)}.customizer h6{font-size:var(--font-14);color:var(--text-dark)}.customizer p{font-size:var(--base-font-size);font-weight:400;color:var(--text-dark)}.customizer .customizer-toggle{background:var(--btn);color:var(--hover-text);box-shadow:-3px 0 8px #22292f1a;border-top-left-radius:6px;border-bottom-left-radius:6px;position:absolute;top:50%;width:38px;height:38px;left:-39px;text-align:center;line-height:40px;border-left:1px solid var(--checkbox-border);cursor:pointer}.customizer .customizer-toggle .fa-cog{font-size:var(--font-15)}.customizer .customizer-toggle:hover{text-decoration:none}.customizer .customizer-styling-skin.skin .custom-control .custom-control-label{position:relative;padding-left:25px}.customizer .custom-control:first-child .font-box{font-size:var(--font-21);font-weight:400}.customizer .custom-control:last-child .font-box{font-size:var(--font-26);font-weight:600}.box-minmax{margin-top:15px;width:100%;display:flex;justify-content:space-between;font-size:14px;color:var(--label-text)}.box-minmax span:first-child{margin-left:4px}.rs-range{margin-top:29px;width:100%;appearance:none;-webkit-appearance:none}.rs-range:focus{outline:none;border:none!important}.rs-range::-webkit-slider-runnable-track{width:100%;height:1px;cursor:pointer;box-shadow:none;background:var(--text-dark);border-radius:0;border:0px solid #010101}.rs-range::-moz-range-track{width:100%;height:1px;cursor:pointer;box-shadow:none;background:var(--btn);border-radius:0;border:0px solid #010101}.rs-range::-webkit-slider-thumb{box-shadow:none;border:0px solid var(--table-border);box-shadow:0 10px 10px #00000040;height:30px;width:20px;border-radius:22px;background:var(--btn);cursor:pointer;appearance:none;-webkit-appearance:none;margin-top:-15px}.rs-range::-moz-range-thumb{box-shadow:none;border:0px solid var(--table-border);box-shadow:0 10px 10px #00000040;height:42px;width:22px;border-radius:22px;background:var(--btn);cursor:pointer;appearance:none;-webkit-appearance:none;margin-top:-20px}.rs-range::-moz-focus-outer{border:0}.rs-label{text-align:center;font-weight:bold;color:var(--label-text);line-height:normal;font-size:14px}.rs-label:after{content:\"px\";font-size:14px;letter-spacing:.07em}\n"], components: [{ type: i10.AlertComponent, selector: "app-alert" }], directives: [{ type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i11.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.Tooltip, selector: "[pTooltip]", inputs: ["tooltipPosition", "tooltipEvent", "appendTo", "positionStyle", "tooltipStyleClass", "tooltipZIndex", "escape", "showDelay", "hideDelay", "life", "positionTop", "positionLeft", "pTooltip", "tooltipDisabled", "tooltipOptions"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i13.InputText, selector: "[pInputText]" }, { type: i11.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i11.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2.RangeValueAccessor, selector: "input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProfileComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'core-profile',
                    templateUrl: './profile.component.html',
                    styleUrls: ['./profile.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.AuthService }, { type: i2.FormBuilder }, { type: i3.ProfileService }, { type: i4.AttachmentsService }, { type: i5.DataStoreService }, { type: i6.ConfirmationService }, { type: i7.ProfileUpdateService }, { type: i8.Router }, { type: i9.NavigationAlertService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9waWNzLWNvcmUvcHJvZmlsZS9zcmMvbGliL3BpY3MtcHJvZmlsZS9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcGljcy1jb3JlL3Byb2ZpbGUvc3JjL2xpYi9waWNzLXByb2ZpbGUvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBMEIsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFNUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRTlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUl6RCxPQUFPLEVBQUUsZUFBZSxFQUFVLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7Ozs7Ozs7OztBQVMxRCxNQUFNLE9BQU8sZ0JBQWdCO0lBa0MzQixZQUNFLFFBQWtCLEVBQ1YsV0FBd0IsRUFDeEIsV0FBd0IsRUFDeEIsY0FBOEIsRUFDOUIsaUJBQXFDLEVBQ3JDLGFBQStCLEVBQy9CLG1CQUF3QyxFQUN4QyxvQkFBMEMsRUFDMUMsTUFBYyxFQUNkLHNCQUE4QztR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O1FBQ1IsTUFBTSxXQUFXLEdBQXFCLFFBQVEsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFxQixDQUFDO1FBQ25HLE1BQU0sV0FBVyxHQUFnQixRQUFRLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBZ0IsQ0FBQztRQUVyRixXQUFXLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUU5RCxTQUFTLGVBQWU7WUFDdEIsV0FBVyxDQUFDLFNBQVMsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQzFDLE1BQU0sY0FBYyxHQUFXLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckYsV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxjQUFjLEdBQUcsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ3pELENBQUM7SUFDSCxDQUFDOzs4R0E3V1UsZ0JBQWdCO2tHQUFoQixnQkFBZ0Isb0RDMUI3Qiw4am1CQXFWTTs0RkQzVE8sZ0JBQWdCO2tCQUw1QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixXQUFXLEVBQUUsMEJBQTBCO29CQUN2QyxTQUFTLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDeEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdG9yLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQnVpbGRlciwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQ29uZmlybWF0aW9uU2VydmljZSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcHJvZmlsZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQXBwQ29uc3RhbnRzIH0gZnJvbSAnLi4vQGNvcmUvY29uc3RhbnRzL2FwcC1jb25zdGFudHMnO1xyXG5pbXBvcnQgeyBBbGVydFNlcnZpY2UgfSBmcm9tICcuLi9AY29yZS9zZXJ2aWNlL2FsZXJ0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBUaGVtZVNlcnZpY2UgfSBmcm9tICcuLi9AY29yZS9zZXJ2aWNlL3RoZW1lLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDdXN0b21WYWxpZGF0b3IgfSBmcm9tICcuLi9AY29yZS92YWxpZGF0b3IvY3VzdG9tLXZhbGlkYXRvcic7XHJcbmltcG9ydCB7IGZvbnRTZXRMaXN0LCB0aGVtZUxpc3QgfSBmcm9tICcuLi9AY29yZS9jb25zdGFudHMvdGhlbWUtY29uc3RhbnRzJztcclxuaW1wb3J0IHsgQXR0YWNobWVudHNTZXJ2aWNlIH0gZnJvbSAnLi4vQGNvcmUvc2VydmljZS9hdHRhY2htZW50cy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9jYWxTZXJ2aWNlIH0gZnJvbSAnLi4vQGNvcmUvc2VydmljZS9sb2NhbC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQXV0aFNlcnZpY2UgfSBmcm9tICcuLi9AY29yZS9zZXJ2aWNlL2F1dGguc2VydmljZSc7XHJcbmltcG9ydCB7IFJCQUNJTkZPIH0gZnJvbSAnLi4vQGNvcmUvdXJscy9yYmFjLXVybC5jb25maWcnO1xyXG5pbXBvcnQgeyBEYXRhU3RvcmVTZXJ2aWNlIH0gZnJvbSAnLi4vQGNvcmUvc2VydmljZS9kYXRhLXN0b3JlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBEYXRlUGlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFByb2ZpbGVVcGRhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcHJvZmlsZS11cGRhdGUuc2VydmljZSc7XHJcbmltcG9ydCB7IE5hdmlnYXRpb25TdGFydCwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgTmF2aWdhdGlvbkFsZXJ0U2VydmljZSB9IGZyb20gJy4uL0Bjb3JlL3NlcnZpY2UvbmF2aWdhdGlvbi1hbGVydC5zZXJ2aWNlJztcclxuZGVjbGFyZSBjb25zdCAkIDogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdjb3JlLXByb2ZpbGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm9maWxlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9wcm9maWxlLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFByb2ZpbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIHVzZXJGb3JtITogRm9ybUdyb3VwO1xyXG4gIHVzZXJpZDogYW55O1xyXG4gIHRodW1ibmFpbCE6IHN0cmluZztcclxuICBpbWFnZURhdGE6IGFueTtcclxuICB1cGxvYWRlZEZpbGU6IGFueTtcclxuICB1cmxQYXRoOiBhbnk7XHJcbiAgYXR0YWNoVHlwZTogYW55O1xyXG4gIHJlc2V0UGFzc3dvcmRGb3JtITogRm9ybUdyb3VwO1xyXG4gIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlO1xyXG4gIGxvY2Fsc3RvcmFnZTogTG9jYWxTZXJ2aWNlO1xyXG4gIGlzVmFsaWQgPSBmYWxzZTtcclxuICBzb2NrZXRTdWJzY3JpcHRpb24hOiBTdWJzY3JpcHRpb247XHJcbiAgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gIHRoZW1lczogYW55ID0gW107XHJcbiAgZm9udFNldExpc3Q6IGFueSA9IFtdO1xyXG4gIHNlbGVjdGVkVGhlbWU6IGFueTtcclxuICBzZWxlY3RlZEZvbnQ6IGFueTtcclxuICB0aGVtZVNlcnZpY2U6IFRoZW1lU2VydmljZTtcclxuICByb2NrZXRJY29uITogc3RyaW5nO1xyXG4gIGVudmlyb25tZW50OiBhbnk7XHJcbiAgUkJBQ09SRzogUkJBQ0lORk8gPSBuZXcgUkJBQ0lORk8oKTtcclxuICBvcmdTdWJzITogU3Vic2NyaXB0aW9uO1xyXG4gIG9yZ0lkOiBhbnk7XHJcbiAgZXJyb3JzID0gQXBwQ29uc3RhbnRzLmVycm9yTGlzdDtcclxuICBodHRwU2VydmljZTphbnk7XHJcbiAgbmV4dE5hdmlnYXRpb246IHN0cmluZztcclxuICBjdXJyZW50VGFiOiBzdHJpbmcgPSBcIiN2LXBpbGxzLWhvbWVcIjtcclxuICBpc1RoZW1lQWN0aXZlOiBib29sZWFuO1xyXG4gIGlzUHJvZmlsZUFjdGl2ZTogYm9vbGVhbjtcclxuICBpc1Byb2ZpbGVTaG93bjogYm9vbGVhbjtcclxuICBpc1RoZW1lU2hvd246IGJvb2xlYW47XHJcbiAgcm91dGVUbzogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgIHByaXZhdGUgYXV0aFNlcnZpY2U6IEF1dGhTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXHJcbiAgICBwcml2YXRlIHByb2ZpbGVTZXJ2aWNlOiBQcm9maWxlU2VydmljZSxcclxuICAgIHByaXZhdGUgYXR0YWNobWVudFNlcnZpY2U6IEF0dGFjaG1lbnRzU2VydmljZSxcclxuICAgIHByaXZhdGUgX3N0b3Jlc2VydmljZTogRGF0YVN0b3JlU2VydmljZSxcclxuICAgIHByaXZhdGUgY29uZmlybWF0aW9uU2VydmljZTogQ29uZmlybWF0aW9uU2VydmljZSxcclxuICAgIHByaXZhdGUgcHJvZmlsZVVwZGF0ZVNlcnZpY2U6IFByb2ZpbGVVcGRhdGVTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcclxuICAgIHByaXZhdGUgbmF2aWdhdGlvbkFsZXJ0U2VydmljZTogTmF2aWdhdGlvbkFsZXJ0U2VydmljZVxyXG4gICkge1xyXG4gICAgdGhpcy5sb2NhbHN0b3JhZ2UgPSBpbmplY3Rvci5nZXQ8TG9jYWxTZXJ2aWNlPihMb2NhbFNlcnZpY2UpO1xyXG4gICAgdGhpcy5hbGVydFNlcnZpY2UgPSBpbmplY3Rvci5nZXQ8QWxlcnRTZXJ2aWNlPihBbGVydFNlcnZpY2UpO1xyXG4gICAgdGhpcy50aGVtZVNlcnZpY2UgPSBpbmplY3Rvci5nZXQ8VGhlbWVTZXJ2aWNlPihUaGVtZVNlcnZpY2UpO1xyXG4gICAgdGhpcy51c2VyaWQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdpZCcpO1xyXG4gICAgY29uc3QgdGFiID0gdGhpcy5sb2NhbHN0b3JhZ2UuZ2V0SXRlbSgnQ1VSUkVOVF9QUk9GSUxFX1RBQicpO1xyXG4gICAgdGhpcy5nZXRUYWIodGFiKTtcclxuICAgIHRoaXMuc2VsZWN0ZWRUaGVtZSA9IHRoaXMubG9jYWxzdG9yYWdlLmdldEl0ZW0oJ1NFTEVDVEVEX1RIRU1FJykgfHwgJ2RlZmF1bHQnO1xyXG4gICAgdGhpcy5zZWxlY3RlZEZvbnQgPSB0aGlzLmxvY2Fsc3RvcmFnZS5nZXRJdGVtKCdTRUxFQ1RFRF9GT05UJykgfHwgJzEzJztcclxuICAgIHRoaXMudGhlbWVzID0gdGhlbWVMaXN0O1xyXG4gICAgdGhpcy5mb250U2V0TGlzdCA9IGZvbnRTZXRMaXN0O1xyXG4gICAgdGhpcy5pbml0aWFsaXplUmVzZXRQYXNzd29yZEZvcm0oKTtcclxuICAgIHRoaXMuaW5pdGlhbGl6ZUZvcm0oKTtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgbGV0IHNob3VsZE5hdmlnYXRlID0gdHJ1ZTtcclxuICAgIHRoaXMuc2V0RmxhZyhmYWxzZSk7XHJcbiAgICBcclxuICAgIHRoaXMucm91dGVyLmV2ZW50cy5zdWJzY3JpYmUoZXZlbnQgPT4ge1xyXG4gICAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uU3RhcnQpIHtcclxuICAgICAgICB0aGlzLnJvdXRlVG8gPSBldmVudD8udXJsO1xyXG4gICAgICAgIGNvbnN0IHNob3VsZFByZXZlbnROYXZpZ2F0aW9uID0gdHJ1ZTtcclxuICAgICAgICBpZiAodGhpcy5uYXZpZ2F0aW9uQWxlcnRTZXJ2aWNlLmdldEZsYWcoKSAmJiBzaG91bGRQcmV2ZW50TmF2aWdhdGlvbikge1xyXG4gICAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW10sIHsgc2tpcExvY2F0aW9uQ2hhbmdlOiB0cnVlIH0pO1xyXG4gICAgICAgICAgJCgnI1VwZGF0ZVVzZXJUaGVtZScpLm1vZGFsKCdzaG93Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHRoaXMub3JnU3VicyA9ICB0aGlzLl9zdG9yZXNlcnZpY2UuY3VycmVudFN0b3JlLnN1YnNjcmliZSgocmVzOiBhbnkpID0+IHtcclxuICAgICAgaWYgKHJlc1snUkJBQ09SRyddICYmIHJlc1snUkJBQ09SRyddICE9PSAnJykge1xyXG4gICAgICAgIHRoaXMuUkJBQ09SRyA9IHJlc1snUkJBQ09SRyddO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuUkJBQ09SRywgJ1JCQUNPUkcgUHJvZmlsZScpO1xyXG4gICAgICAgIHRoaXMuZW52aXJvbm1lbnQgPSB0aGlzLlJCQUNPUkdbJ2Vudmlyb25tZW50J107XHJcbiAgICAgICAgdGhpcy5vcmdJZCA9IHBhcnNlSW50KHRoaXMuUkJBQ09SR1snb3JnSUQnXSk7XHJcbiAgICAgICAgdGhpcy5odHRwU2VydmljZSA9IHJlc1snSFRUUFNFUlZJQ0UnXVxyXG4gICAgICAgIGlmKHRoaXMuZW52aXJvbm1lbnQpe1xyXG4gICAgICAgICAgdGhpcy5nZXRVc2VySW5mbygpO1xyXG4gICAgICAgICAgdGhpcy5mb250U2xpZGVyKCk7XHJcbiAgICAgICAgICB0aGlzLmdldFVzZXJUaGVtZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVUaGVtZVBvcHVwKCl7XHJcbiAgICB0aGlzLnVwZGF0ZVN0eWxpbmcoKTtcclxuICAgIC8vIHRoaXMuc2V0RmxhZyhmYWxzZSk7XHJcbiAgICAkKCcjVXBkYXRlVXNlclRoZW1lJykubW9kYWwoJ2hpZGUnKTtcclxuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwodGhpcy5yb3V0ZVRvKTtcclxuICB9XHJcblxyXG4gIGNhbmNsZVRoZW1lUG9wdXAoKXtcclxuICAgIHRoaXMuZ2V0VXNlclRoZW1lKCk7XHJcbiAgICAvLyB0aGlzLnNldEZsYWcoZmFsc2UpO1xyXG4gICAgJCgnI1VwZGF0ZVVzZXJUaGVtZScpLm1vZGFsKCdoaWRlJyk7XHJcbiAgfVxyXG5cclxuICBnZXRUYWIodGFiOiBhbnkpe1xyXG4gICAgaWYodGFiICYmIHRhYi50cmltKCkgJiYgdGFiICE9IFwiI3YtcGlsbHMtaG9tZVwiKXtcclxuICAgICAgdGhpcy5jdXJyZW50VGFiID0gdGFiO1xyXG4gICAgICB0aGlzLmlzUHJvZmlsZUFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICB0aGlzLmlzVGhlbWVBY3RpdmUgPSB0cnVlO1xyXG4gICAgICB0aGlzLmlzUHJvZmlsZVNob3duID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuaXNUaGVtZVNob3duID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuY3VycmVudFRhYiA9IFwiI3YtcGlsbHMtaG9tZVwiO1xyXG4gICAgICB0aGlzLmlzVGhlbWVBY3RpdmUgPSBmYWxzZTtcclxuICAgICAgdGhpcy5pc1Byb2ZpbGVBY3RpdmUgPSB0cnVlO1xyXG4gICAgICB0aGlzLmlzVGhlbWVTaG93biA9IGZhbHNlO1xyXG4gICAgICB0aGlzLmlzUHJvZmlsZVNob3duID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEN1cnJlbnRUYWIodGFiOiBzdHJpbmcpe1xyXG4gICAgdGhpcy5jdXJyZW50VGFiID0gdGFiO1xyXG4gICAgdGhpcy5sb2NhbHN0b3JhZ2Uuc2V0SXRlbSgnQ1VSUkVOVF9QUk9GSUxFX1RBQicsIHRhYik7XHJcbiAgfVxyXG5cclxuICBzZXRGbGFnKGZsYWc6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIHRoaXMubmF2aWdhdGlvbkFsZXJ0U2VydmljZS5zZXRGbGFnKGZsYWcpO1xyXG4gIH1cclxuXHJcbiAgaW5pdGlhbGl6ZVJlc2V0UGFzc3dvcmRGb3JtKCkge1xyXG4gICAgdGhpcy5yZXNldFBhc3N3b3JkRm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xyXG4gICAgICBpZDogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnaWQnKSxcclxuICAgICAgbWFpbGlkOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdlbWFpbCcpLFxyXG4gICAgICBjdXJyZW50cGFzc3dvcmQ6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXHJcbiAgICAgIG5ld3Bhc3N3b3JkOiBbXHJcbiAgICAgICAgJycsXHJcbiAgICAgICAgVmFsaWRhdG9ycy5jb21wb3NlKFtcclxuICAgICAgICAgIFZhbGlkYXRvcnMucmVxdWlyZWQsXHJcbiAgICAgICAgICBDdXN0b21WYWxpZGF0b3IucGF0dGVyblZhbGlkYXRvcigvXFxkLywgeyBoYXNOdW1iZXI6IHRydWUgfSksXHJcbiAgICAgICAgICBDdXN0b21WYWxpZGF0b3IucGF0dGVyblZhbGlkYXRvcigvW0EtWl0vLCB7IGhhc0NhcGl0YWxDYXNlOiB0cnVlIH0pLFxyXG4gICAgICAgICAgQ3VzdG9tVmFsaWRhdG9yLnBhdHRlcm5WYWxpZGF0b3IoL1thLXpdLywgeyBoYXNTbWFsbENhc2U6IHRydWUgfSksXHJcbiAgICAgICAgICBDdXN0b21WYWxpZGF0b3IucGF0dGVyblZhbGlkYXRvcigvWyAhQCMkJV4mKigpXytcXC09XFxbXFxde307JzpcIlxcXFx8LC48PlxcLz9dLywgeyBoYXNTcGVjaWFsQ2hhcmFjdGVyczogdHJ1ZSB9KSxcclxuICAgICAgICAgIFZhbGlkYXRvcnMubWluTGVuZ3RoKDgpXHJcbiAgICAgICAgXSlcclxuICAgICAgXSxcclxuICAgICAgY29uZm9ybXBhc3N3b3JkOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGluaXRpYWxpemVGb3JtKCkge1xyXG4gICAgdGhpcy51c2VyRm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xyXG4gICAgICBmaXJzdG5hbWU6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXHJcbiAgICAgIG1pZGRsZW5hbWU6IFsnJ10sXHJcbiAgICAgIGxhc3RuYW1lOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxyXG4gICAgICB1c2VybmFtZTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcclxuICAgICAgLy8gZG9iOiBbJyddLFxyXG4gICAgICBlbWFpbDogWycnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5wYXR0ZXJuKEFwcENvbnN0YW50cy5yZWdleEVtYWlsKV1dLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXQgcmVzZXRGb3JtY29udHJvbHMoKSB7XHJcbiAgICBjb25zdCBpc0ludmFsaWQgPSB0aGlzLnJlc2V0UGFzc3dvcmRGb3JtLmNvbnRyb2xzWyduZXdwYXNzd29yZCddLnN0YXR1cztcclxuICAgIGNvbnN0IG5ld3Bhc3N3b3JkID0gdGhpcy5yZXNldFBhc3N3b3JkRm9ybS52YWx1ZVsnbmV3cGFzc3dvcmQnXTtcclxuICAgIGNvbnN0IGNvbmZvcm1wYXNzd29yZCA9IHRoaXMucmVzZXRQYXNzd29yZEZvcm0udmFsdWVbJ2NvbmZvcm1wYXNzd29yZCddO1xyXG4gICAgaWYgKGlzSW52YWxpZCA9PT0gJ0lOVkFMSUQnICYmIG5ld3Bhc3N3b3JkICE9PSAnJykge1xyXG4gICAgICB0aGlzLmlzVmFsaWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5pc1ZhbGlkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAobmV3cGFzc3dvcmQgIT09IGNvbmZvcm1wYXNzd29yZCkge1xyXG4gICAgICB0aGlzLnJlc2V0UGFzc3dvcmRGb3JtLmdldCgnY29uZm9ybXBhc3N3b3JkJykhLnNldEVycm9ycyh7IE5vUGFzc3N3b3JkTWF0Y2g6IHRydWUgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5yZXNldFBhc3N3b3JkRm9ybS5jb250cm9scztcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgdGhpcy5wcm9maWxlU2VydmljZS5nZXRBbGxVc2VyTGlzdCh0aGlzLnVzZXJpZCkuc3Vic2NyaWJlKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICBjb25zdCBwYXRjaFZhbHVlZGF0YSA9IHJlcy5kYXRhO1xyXG4gICAgICB0aGlzLnRodW1ibmFpbCA9IHBhdGNoVmFsdWVkYXRhLmFkZGl0aW9uYWxpbmZvPy50aHVtYm5haWw/LnVybCB8fCAnJztcclxuICAgICAgdGhpcy51c2VyRm9ybS5wYXRjaFZhbHVlKHtcclxuICAgICAgICBmaXJzdG5hbWU6IHBhdGNoVmFsdWVkYXRhLmZpcnN0bmFtZSxcclxuICAgICAgICBtaWRkbGVuYW1lOiBwYXRjaFZhbHVlZGF0YS5taWRkbGVuYW1lLFxyXG4gICAgICAgIGxhc3RuYW1lOiBwYXRjaFZhbHVlZGF0YS5sYXN0bmFtZSxcclxuICAgICAgICB1c2VybmFtZTogcGF0Y2hWYWx1ZWRhdGEudXNlcm5hbWUsXHJcbiAgICAgICAgLy8gZG9iOiBuZXcgRGF0ZShwYXRjaFZhbHVlZGF0YS5kb2IpLFxyXG4gICAgICAgIGVtYWlsOiBwYXRjaFZhbHVlZGF0YS5lbWFpbFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlRmlsZUlucHV0KGZpbGVWYWx1ZTogYW55KSB7XHJcbiAgICBjb25zdCB0YXJnZXQgPSBmaWxlVmFsdWUudGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcbiAgICBjb25zdCBmaWxlOiBGaWxlID0gdGFyZ2V0LmZpbGVzIVswXTtcclxuICAgIHRoaXMudXBsb2FkZWRGaWxlID0gZmlsZVZhbHVlLnRhcmdldC5maWxlc1swXS5uYW1lO1xyXG4gICAgdGhpcy5pbWFnZURhdGEgPSB7XHJcbiAgICAgIGNvbnRlbnRUeXBlOiBmaWxlVmFsdWUudGFyZ2V0LmZpbGVzWzBdLnR5cGUsXHJcbiAgICAgIGZpbGVOYW1lOiBgdXNlci1wcm9maWxlaW1hZ2UvJHt0aGlzLnVzZXJpZH0vJHt0aGlzLnVwbG9hZGVkRmlsZS5yZXBsYWNlQWxsKCcgJywgJycpfWBcclxuICAgIH07XHJcbiAgICBpZiAodGhpcy52YWxpZGF0ZUltYWdlKGZpbGVWYWx1ZS50YXJnZXQuZmlsZXMpKSB7XHJcbiAgICAgIHRoaXMuYXR0YWNobWVudFNlcnZpY2UudXBsb2FkS2V5KHRoaXMuaW1hZ2VEYXRhKS5zdWJzY3JpYmUoXHJcbiAgICAgICAgKHJlczogYW55KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnVybFBhdGggPSByZXMuZGF0YTtcclxuICAgICAgICAgIGNvbnN0IHVwbG9hZEF0dGFjaG1lbnQ6IGFueSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaWxlJyk7XHJcbiAgICAgICAgICBjb25zdCB1cGxvYWRBdHRhY2htZW50RGV0YWlscyA9IHVwbG9hZEF0dGFjaG1lbnQuZmlsZXNbMF07XHJcbiAgICAgICAgICB0aGlzLmh0dHBTZXJ2aWNlLnB1dFVwbG9hZCh0aGlzLnVybFBhdGgsIHVwbG9hZEF0dGFjaG1lbnREZXRhaWxzLCB1cGxvYWRBdHRhY2htZW50RGV0YWlscy50eXBlKS5zdWJzY3JpYmUoXHJcbiAgICAgICAgICAgIChfcmVzcDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcygnUHJvZmlsZSBJbWFnZSB1cGxvYWRlZCBzdWNjZXNzZnVsbHkuJyk7XHJcbiAgICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICByZWFkZXIub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50aHVtYm5haWwgPSByZWFkZXIucmVzdWx0IGFzIHN0cmluZztcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICAgICAgICAgIHRoaXMuYXR0YWNoVHlwZSA9IGZpbGVWYWx1ZS50YXJnZXQuZmlsZXNbMF0udHlwZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3IgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hbGVydFNlcnZpY2UuZXJyb3IoQXBwQ29uc3RhbnRzLmVycm9yTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwbG9hZGVkRmlsZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cmxQYXRoID0gJyc7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX2Vycm9yID0+IHtcclxuICAgICAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmVycm9yKEFwcENvbnN0YW50cy5lcnJvck1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVwZGF0ZXByb2ZpbGUoKSB7XHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IHRoaXMudXNlckZvcm0uZ2V0UmF3VmFsdWUoKTtcclxuICAgIC8vIHVzZXJEYXRhLmRvYiA9IG5ldyBEYXRlUGlwZSgnZW4tVVMnKS50cmFuc2Zvcm0odXNlckRhdGEuZG9iLCAnWVlZWS1NTS1kZCcpO1xyXG4gICAgaWYgKHRoaXMudXBsb2FkZWRGaWxlKSB7XHJcbiAgICAgIHVzZXJEYXRhLmFkZGl0aW9uYWxpbmZvID0ge1xyXG4gICAgICAgIHBob3RvOiB0aGlzLmltYWdlRGF0YSxcclxuICAgICAgICB0aHVtYm5haWw6IHRoaXMuaW1hZ2VEYXRhXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLnVwZGF0ZVVzZXIodXNlckRhdGEsIHRoaXMudXNlcmlkKS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLmdldFByb2ZpbGUoe1xyXG4gICAgICAgIHVybDogdGhpcy50aHVtYm5haWwsXHJcbiAgICAgICAgbmFtZTogdGhpcy51c2VyRm9ybS52YWx1ZS5maXJzdG5hbWVcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoJ1Byb2ZpbGUgdXBkYXRlZCBzdWNjZXNzZnVsbHknKTtcclxuICAgICAgdGhpcy5wcm9maWxlVXBkYXRlU2VydmljZS51cGRhdGVQcm9maWxlUGljdHVyZSh0aGlzLnRodW1ibmFpbCk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgdXBkYXRlU3R5bGluZygpIHtcclxuICAgIGNvbnN0IGJvZHkgPSB7XHJcbiAgICAgIHR5cGU6ICdVU0VSX1RIRU1FX1BSRUZFUkVOQ0VTJyxcclxuICAgICAgbWFwcGVkaWQ6IHRoaXMudXNlcmlkLFxyXG4gICAgICBjb25maWc6IEpTT04uc3RyaW5naWZ5KHsgdGhlbWU6IHRoaXMuc2VsZWN0ZWRUaGVtZSwgZm9udDogdGhpcy5zZWxlY3RlZEZvbnQgfSlcclxuICAgIH07XHJcbiAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKCdUaGVtZSBjaGFuZ2VzIHNhdmVkIHN1Y2Nlc3NmdWxseS4nKTtcclxuICAgIHRoaXMuc2V0RmxhZyhmYWxzZSk7XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLnNhdmVVc2VyUHJlZmVyZW5jZShib2R5KS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICAvLyB0aGlzLnNldEZsYWcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VyVGhlbWUoKSB7XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLmdldFVzZXJQcmVmZXJlbmNlKHRoaXMudXNlcmlkKS5zdWJzY3JpYmUoKHJlczogYW55KSA9PiB7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSByZXMuZGF0YTtcclxuICAgICAgY29uc3QgY29uZmlnID0gSlNPTi5wYXJzZShkYXRhPy5jb25maWcpO1xyXG4gICAgICB0aGlzLnNlbGVjdGVkVGhlbWUgPSBjb25maWc/LnRoZW1lIHx8ICdkZWZhdWx0JztcclxuICAgICAgdGhpcy5zZWxlY3RlZEZvbnQgPSBjb25maWc/LmZvbnQgfHwgJzEzJztcclxuICAgICAgdGhpcy5sb2NhbHN0b3JhZ2Uuc2V0SXRlbSgnU0VMRUNURURfRk9OVCcsIHRoaXMuc2VsZWN0ZWRGb250KTtcclxuICAgICAgdGhpcy5sb2NhbHN0b3JhZ2Uuc2V0SXRlbSgnU0VMRUNURURfVEhFTUUnLCB0aGlzLnNlbGVjdGVkVGhlbWUpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRUaGVtZShldmVudDogYW55KSB7XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLnNldFRoZW1lKGV2ZW50KTtcclxuICAgIHRoaXMuc2V0RmxhZyh0cnVlKTtcclxuICB9XHJcbiAgc2V0Rm9udChldmVudDogYW55KSB7XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLnNldEZvbnQoZXZlbnQpO1xyXG4gICAgdGhpcy5zZXRGbGFnKHRydWUpO1xyXG4gIH1cclxuICBzZXRSYW5nZUZvbnQobW9kYWw6IGFueSl7XHJcbiAgICB0aGlzLnByb2ZpbGVTZXJ2aWNlLnNldFJhbmdlRm9udChtb2RhbCk7XHJcbiAgICB0aGlzLnNldEZsYWcodHJ1ZSk7XHJcbiAgfVxyXG4gIGNoYW5nZVBhc3N3b3JkKCkge1xyXG4gICAgY29uc3Qgb2JqID0ge1xyXG4gICAgICBpZDogTnVtYmVyKHRoaXMucmVzZXRQYXNzd29yZEZvcm0udmFsdWVbJ2lkJ10pLFxyXG4gICAgICBjdXJyZW50cGFzc3dvcmQ6IHRoaXMucmVzZXRQYXNzd29yZEZvcm0udmFsdWVbJ2N1cnJlbnRwYXNzd29yZCddLFxyXG4gICAgICBuZXdwYXNzd29yZDogdGhpcy5yZXNldFBhc3N3b3JkRm9ybS52YWx1ZVsnbmV3cGFzc3dvcmQnXVxyXG4gICAgfTtcclxuICAgIHRoaXMuYXV0aFNlcnZpY2UuUmVzZXRQYXNzd29yZChvYmopLnN1YnNjcmliZShcclxuICAgICAgX3JlcyA9PiB7XHJcbiAgICAgICAgdGhpcy5hdXRoU2VydmljZS5sb2dvdXQoKTtcclxuICAgICAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKCdQYXNzd29yZCBDaGFuZ2VkIFN1Y2Nlc3NmdWxseScpO1xyXG4gICAgICB9LFxyXG4gICAgICBfZXJyb3IgPT4gdGhpcy5hbGVydFNlcnZpY2UuZXJyb3IoJ1NvbWV0aGluZyB3ZW50IHdyb25nJylcclxuICAgICk7XHJcbiAgfVxyXG4gIHZhbGlkYXRlSW1hZ2UoZmlsZTogYW55KSB7XHJcbiAgICBjb25zdCBmaWxlU2l6ZSA9IE51bWJlcihmaWxlWzBdLnNpemUpIC8gMTAyNDtcclxuICAgIGNvbnN0IGZpbGV0eXBlID0gZmlsZVswXS50eXBlLnJlcGxhY2UoJ2ltYWdlLycsICcnKTtcclxuICAgIGlmIChmaWxldHlwZSA9PT0gJ2pwZycgfHwgZmlsZXR5cGUgPT09ICdqcGVnJyB8fCBmaWxldHlwZSA9PT0gJ3BuZycgfHwgZmlsZXR5cGUgPT09ICdnaWYnKSB7XHJcbiAgICAgIGlmIChmaWxlU2l6ZSA8IDUwKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5hbGVydFNlcnZpY2Uud2FybignRmlsZSBpcyBiaWdnZXIgdGhhbiA1MCBLQicpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uud2FybihgJHtmaWxldHlwZX0gZm9ybWF0IGlzIG5vdCBzdXBwb3J0ZWRgKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY2xlYXJGb3JtKCkge1xyXG4gICAgdGhpcy51c2VyRm9ybS5jb250cm9sc1snZmlyc3RuYW1lJ10ucmVzZXQoKTtcclxuICAgIHRoaXMudXNlckZvcm0uY29udHJvbHNbJ21pZGRsZW5hbWUnXS5yZXNldCgpO1xyXG4gICAgdGhpcy51c2VyRm9ybS5jb250cm9sc1snbGFzdG5hbWUnXS5yZXNldCgpO1xyXG4gICAgdGhpcy50aHVtYm5haWwgPSAnJztcclxuICB9XHJcblxyXG4gIG9uQ2xpY2tSZW1vdmUoKXtcclxuICAgICQoJyNEZWxldGV1c2VyJykubW9kYWwoJ3Nob3cnKTtcclxuICB9XHJcblxyXG4gIGNhbmNlbCgpIHtcclxuICAgIC8vIHRoaXMudXNlckZvcm0ucmVzZXQoKTtcclxuICAgIHRoaXMudXNlckZvcm0uZW5hYmxlKCk7XHJcblxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlVGh1bWJuYWlsKCkge1xyXG4gICAgLy8gdGhpcy5jb25maXJtYXRpb25TZXJ2aWNlLmNvbmZpcm0oe1xyXG4gICAgLy8gICB0YXJnZXQ6IGV2ZW50LnRhcmdldCBhcyBFdmVudFRhcmdldCxcclxuICAgIC8vICAgbWVzc2FnZTogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBwcm9jZWVkPycsXHJcbiAgICAvLyAgIGljb246ICdwaSBwaS1leGNsYW1hdGlvbi10cmlhbmdsZScsXHJcbiAgICAvLyAgIGFjY2VwdDogKCkgPT4ge1xyXG4gICAgICB0aGlzLmNhbmNlbCgpO1xyXG4gICAgICAgIHRoaXMudGh1bWJuYWlsID0gJyc7XHJcbiAgICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcygnUHJvZmlsZSBpbWFnZSBkZWxldGVkIHN1Y2Nlc3NmdWxseS4nKTtcclxuICAgICAgICAkKCcjRGVsZXRldXNlcicpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICAvLyAgIH0sXHJcbiAgICAvLyAgIHJlamVjdDogKCkgPT4ge1xyXG4gICAgLy8gICAgICAgLy8gcmVqZWN0IG1lc3NhZ2VcclxuICAgIC8vICAgfVxyXG4gICAgLy8gfSk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnNvY2tldFN1YnNjcmlwdGlvbikge1xyXG4gICAgICB0aGlzLnNvY2tldFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5vcmdTdWJzLnVuc3Vic2NyaWJlKCk7XHJcbiAgfVxyXG5cclxuICBmb250U2xpZGVyKCkge1xyXG4gICAgY29uc3QgcmFuZ2VTbGlkZXI6IEhUTUxJbnB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncnMtcmFuZ2UtbGluZScpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcbiAgICBjb25zdCByYW5nZUJ1bGxldDogSFRNTEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncnMtYnVsbGV0JykgYXMgSFRNTEVsZW1lbnQ7XHJcblxyXG4gICAgcmFuZ2VTbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBzaG93U2xpZGVyVmFsdWUsIGZhbHNlKTtcclxuXHJcbiAgICBmdW5jdGlvbiBzaG93U2xpZGVyVmFsdWUoKTogdm9pZCB7XHJcbiAgICAgIHJhbmdlQnVsbGV0LmlubmVySFRNTCA9IHJhbmdlU2xpZGVyLnZhbHVlO1xyXG4gICAgICBjb25zdCBidWxsZXRQb3NpdGlvbjogbnVtYmVyID0gKE51bWJlcihyYW5nZVNsaWRlci52YWx1ZSkgLyBOdW1iZXIocmFuZ2VTbGlkZXIubWF4KSk7XHJcbiAgICAgIHJhbmdlQnVsbGV0LnN0eWxlLmxlZnQgPSAoYnVsbGV0UG9zaXRpb24gKiA1NzgpICsgJ3B4JztcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiIsIjxhcHAtYWxlcnQ+PC9hcHAtYWxlcnQ+XHJcbjxkaXYgY2xhc3M9XCJjYXJkIHctMTAwIHByb2ZpbGVcIj5cclxuICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLWdyb3VwIGgtMTAwXCIgW2Zvcm1Hcm91cF09XCJ1c2VyRm9ybVwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImxlZnQtY29udGFpbmVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJuYXYgZmxleC1jb2x1bW4gbmF2LXBpbGxzIHB5LTQgcHgtM1wiIGlkPVwidi1waWxscy10YWJcIiByb2xlPVwidGFibGlzdFwiIGFyaWEtb3JpZW50YXRpb249XCJ2ZXJ0aWNhbFwiPlxyXG4gICAgICAgIDxhIGNsYXNzPVwibmF2LWxpbmsgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBtYi0zXCIgW2NsYXNzLmFjdGl2ZV09XCJpc1Byb2ZpbGVBY3RpdmVcIiBpZD1cInYtcGlsbHMtaG9tZS10YWJcIiBkYXRhLXRvZ2dsZT1cInBpbGxcIlxyXG4gICAgICAgICAgW2hyZWZdPVwiY3VycmVudFRhYlwiIChjbGljayk9XCJzZXRDdXJyZW50VGFiKCcjdi1waWxscy1ob21lJylcIiByb2xlPVwidGFiXCIgYXJpYS1jb250cm9scz1cInYtcGlsbHMtaG9tZVwiIGFyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCI+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb24gbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCBtci0yXCI+cGVyc29uPC9zcGFuPlxyXG4gICAgICAgICAgRWRpdCBQcm9maWxlXHJcbiAgICAgICAgPC9hPlxyXG4gICAgICAgIDwhLS0gPGEgY2xhc3M9XCJuYXYtbGluayBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1iLTNcIiBpZD1cInYtcGlsbHMtcHJvZmlsZS10YWJcIiBkYXRhLXRvZ2dsZT1cInBpbGxcIlxyXG4gICAgICAgICAgaHJlZj1cIiN2LXBpbGxzLXByb2ZpbGVcIiByb2xlPVwidGFiXCIgYXJpYS1jb250cm9scz1cInYtcGlsbHMtcHJvZmlsZVwiIGFyaWEtc2VsZWN0ZWQ9XCJmYWxzZVwiPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uIG1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQgbXItMlwiPmxvY2tfb3Blbjwvc3Bhbj5cclxuICAgICAgICAgIENoYW5nZSBQYXNzd29yZFxyXG4gICAgICAgIDwvYT4gLS0+XHJcbiAgICAgICAgPGEgY2xhc3M9XCJuYXYtbGluayBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyXCIgW2NsYXNzLmFjdGl2ZV09XCJpc1RoZW1lQWN0aXZlXCIgKGNsaWNrKT1cInNldEN1cnJlbnRUYWIoJyN0aGVtZV90YWInKVwiIGlkPVwidi10aGVtZS1hXCIgZGF0YS10b2dnbGU9XCJwaWxsXCIgW2hyZWZdPVwiY3VycmVudFRhYlwiIHJvbGU9XCJ0YWJcIlxyXG4gICAgICAgICAgYXJpYS1jb250cm9scz1cInRoZW1lX3RhYlwiIGFyaWEtc2VsZWN0ZWQ9XCJmYWxzZVwiPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uIG1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQgbXItMlwiPnBhbGV0dGU8L3NwYW4+XHJcbiAgICAgICAgICBUaGVtZVxyXG4gICAgICAgIDwvYT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgY2xhc3M9XCJyaWdodC1jb250YWluZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cInRhYi1jb250ZW50IHB5LTQgcHgtNFwiIGlkPVwidi1waWxscy10YWJDb250ZW50XCI+XHJcbiAgICAgICAgPCEtLSBFZGl0IFByb2ZpbGUgVGFiIC0tPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItcGFuZSBmYWRlXCIgW2NsYXNzLmFjdGl2ZV09XCJpc1Byb2ZpbGVBY3RpdmVcIiBbY2xhc3Muc2hvd109XCJpc1Byb2ZpbGVTaG93blwiIGlkPVwidi1waWxscy1ob21lXCIgcm9sZT1cInRhYnBhbmVsXCIgYXJpYS1sYWJlbGxlZGJ5PVwidi1waWxscy1ob21lLXRhYlwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInN0cmlwX2hlYWQgdG9nZ2xlbGVmdCBtYi0zXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicmVwb3J0X2hlYWQgZm9udC13ZWlnaHQtYm9sZFwiPkVkaXQgUHJvZmlsZTwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmx1aWQgcC1mb3JtZ3JpZCBwaWMtdXBsb2FkLWdyb3VwIHJvdyBqdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIGNvbC14bC00IGNvbC1sZy02IGNvbC1zbS00IGNvbC1tZC0xMiBjb2wtMTIgdGV4dC1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPVwibXQtMiBtYi0yIHBpYy11cGxvYWQganVzdGlmeS1jb250ZW50LW1kLWNlbnRlclwiPlxyXG4gICAgICAgICAgICAgICAgPGltZyB3aWR0aD1cIjY0XCIgY2xhc3M9XCJyb3VuZGVkLWNpcmNsZSBib3JkZXJcIiBbc3JjXT1cInRodW1ibmFpbCB8fCAnYXNzZXRzL2ltYWdlcy91c2VyLWVtcHR5LnBuZydcIlxyXG4gICAgICAgICAgICAgICAgICBhbHQ9XCJ1cGxvYWRcIiAvPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJmaWxlXCIgaWQ9XCJmaWxlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgc3R5bGU9XCJ2aXNpYmlsaXR5OiBoaWRkZW47IGRpc3BsYXk6IG5vbmVcIlxyXG4gICAgICAgICAgICAgICAgICAoY2hhbmdlKT1cImhhbmRsZUZpbGVJbnB1dCgkZXZlbnQpXCIgLz5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm10LTFcIj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWxcclxuICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZpbGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgcm9sZT1cImJ1dHRvblwiXHJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIm1hdGVyaWFsLWljb24gbWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB0ZXh0LXByaW1hcnkgYWN0aW9uLWJ0blwiXHJcbiAgICAgICAgICAgICAgICAgICAgICA+ZWRpdDwvbGFiZWxcclxuICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICAgIHJvbGU9XCJidXR0b25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJtYXRlcmlhbC1pY29uIG1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQgdGV4dC1kYW5nZXIgYWN0aW9uLWJ0blwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInRodW1ibmFpbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwib25DbGlja1JlbW92ZSgpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICBkZWxldGVcclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwibWF0ZXJpYWwtaWNvbiBtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHRleHQtbXV0ZWQgYWN0aW9uLWJ0blwiXHJcbiAgICAgICAgICAgICAgICAgICAgICBwVG9vbHRpcD1cIkltYWdlIHNpemUgbWF4IDUwS0JcIj5cclxuICAgICAgICAgICAgICAgICAgICAgIEluZm9cclxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZmlndXJlPlxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPCEtLSA8cC1jb25maXJtUG9wdXA+PC9wLWNvbmZpcm1Qb3B1cD4gLS0+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1mbHVpZCBwLWZvcm1ncmlkIHJvd1wiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBjb2wteGwtNCBjb2wtbGctNiBjb2wtc20tNCBjb2wtbWQtMTIgY29sLTEyXCI+XHJcbiAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImZuYW1lXCIgY2xhc3M9XCJyZWZlcnJhbC1mb3JtLWxhYmVsc1wiPlxyXG4gICAgICAgICAgICAgICAgRmlyc3QgTmFtZVxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXF1aXJlZGZpZWxkIHRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCBpZD1cImZuYW1lXCIgdHlwZT1cInRleHRcIiBmb3JtQ29udHJvbE5hbWU9XCJmaXJzdG5hbWVcIiBwbGFjZWhvbGRlcj1cIkVudGVyIEZpcnN0IE5hbWVcIlxyXG4gICAgICAgICAgICAgICAgYXJpYS1kZXNjcmliZWRieT1cImZuYW1lXCIgcElucHV0VGV4dCAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMlwiPlxyXG4gICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJtbmFtZVwiIGNsYXNzPVwicmVmZXJyYWwtZm9ybS1sYWJlbHNcIj5NaWRkbGUgTmFtZSA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm1uYW1lXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIE1pZGRsZSBOYW1lXCIgZm9ybUNvbnRyb2xOYW1lPVwibWlkZGxlbmFtZVwiXHJcbiAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwibW5hbWVcIiBwSW5wdXRUZXh0IC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBjb2wteGwtNCBjb2wtbGctNiBjb2wtc20tNCBjb2wtbWQtMTIgY29sLTEyXCI+XHJcbiAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImxOYW1lXCIgY2xhc3M9XCJyZWZlcnJhbC1mb3JtLWxhYmVsc1wiPlxyXG4gICAgICAgICAgICAgICAgTGFzdCBOYW1lXHJcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInJlcXVpcmVkZmllbGQgdGV4dC1kYW5nZXJcIj4qPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgPGlucHV0IGlkPVwibE5hbWVcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgTGFzdCBOYW1lXCIgZm9ybUNvbnRyb2xOYW1lPVwibGFzdG5hbWVcIiBwSW5wdXRUZXh0XHJcbiAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwibE5hbWVcIiAvPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmx1aWQgcC1mb3JtZ3JpZCByb3dcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMlwiPlxyXG4gICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJ1c2VyTmFtZVwiIGNsYXNzPVwicmVmZXJyYWwtZm9ybS1sYWJlbHNcIj5cclxuICAgICAgICAgICAgICAgIFVzZXIgTmFtZVxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXF1aXJlZGZpZWxkIHRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCBpZD1cInVzZXJOYW1lXCIgdHlwZT1cInRleHRcIiByZWFkb25seT1cInRydWVcIiBwbGFjZWhvbGRlcj1cIkVudGVyIFVzZXIgTmFtZVwiIGZvcm1Db250cm9sTmFtZT1cInVzZXJuYW1lXCJcclxuICAgICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9XCJ1c2VyTmFtZVwiIHBJbnB1dFRleHQgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMlwiPiAtLT5cclxuICAgICAgICAgICAgICA8IS0tIDxsYWJlbCBmb3I9XCJkYXRlZm9ybWF0XCIgY2xhc3M9XCJyZWZlcnJhbC1mb3JtLWxhYmVsc1wiPlxyXG4gICAgICAgICAgICAgICAgRE9CIC0tPlxyXG4gICAgICAgICAgICAgICAgPCEtLSA8c3BhbiBjbGFzcz1cInJlcXVpcmVkZmllbGQgdGV4dC1kYW5nZXJcIj4qPC9zcGFuPiAtLT5cclxuICAgICAgICAgICAgICA8IS0tIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgPHAtY2FsZW5kYXJcclxuICAgICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJkb2JcIlxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VsZWN0IERhdGUgT2YgQmlydGhcIlxyXG4gICAgICAgICAgICAgIGRhdGVGb3JtYXQ9XCJ5eS1tbS1kZFwiXHJcbiAgICAgICAgICAgICAgW21heERhdGVdPVwiY3VycmVudERhdGVcIlxyXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwiU0VUVElOR1NfVVNSX0RPQlwiXHJcbiAgICAgICAgICAgICAgaW5wdXRJZD1cImRhdGVmb3JtYXRcIj48L3AtY2FsZW5kYXI+IC0tPlxyXG4gICAgICAgICAgICA8IS0tIDwvZGl2PiAtLT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMlwiPlxyXG4gICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJ1c2Vyc0VtYWlsaWRcIiBjbGFzcz1cInJlZmVycmFsLWZvcm0tbGFiZWxzXCI+XHJcbiAgICAgICAgICAgICAgICBFbWFpbCBJRFxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXF1aXJlZGZpZWxkIHRleHQtZGFuZ2VyXCI+Kjwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDxpbnB1dCBpZD1cInVzZXJzRW1haWxpZFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgRW1haWwgSURcIiBmb3JtQ29udHJvbE5hbWU9XCJlbWFpbFwiIHR5cGU9XCJ0ZXh0XCIgcElucHV0VGV4dFxyXG4gICAgICAgICAgICAgICAgcmVhZG9ubHkgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZsdWlkIHAtZm9ybWdyaWQgcm93XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIGNvbC1sZy00IGNvbC1zbS00IGNvbC1tZC0xMiBjb2wtMTJcIj48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLWxnLTQgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMlwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBjb2wtbGctNCBjb2wtc20tNCBjb2wtbWQtMTIgY29sLTEyIG1iLTBcIj5cclxuICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwicHVsbC1yaWdodCBtci0yIG1iLTIgYnRuIGJ0bi1wcmltYXJ5IGJ0bmNvbW1vblwiIChjbGljayk9XCJ1cGRhdGVwcm9maWxlKClcIj5cclxuICAgICAgICAgICAgICAgIFNhdmUgQ2hhbmdlc1xyXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJwdWxsLXJpZ2h0IG1iLTIgbXItMiBidG4gYmctd2hpdGUgdGV4dC1wcmltYXJ5IGJ0bmNhbmNlbFwiIChjbGljayk9XCJjbGVhckZvcm0oKVwiPlxyXG4gICAgICAgICAgICAgICAgQ2xlYXJcclxuICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8IS0tIFRhYiBFbmQgLS0+XHJcblxyXG4gICAgICAgIDwhLS0gQ2hhbmdlIFBhc3N3b3JkIFRhYiAtLT5cclxuICAgICAgICA8IS0tIDxkaXYgY2xhc3M9XCJ0YWItcGFuZSBmYWRlXCIgaWQ9XCJ2LXBpbGxzLXByb2ZpbGVcIiByb2xlPVwidGFicGFuZWxcIiBhcmlhLWxhYmVsbGVkYnk9XCJ2LXBpbGxzLXByb2ZpbGUtdGFiXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwic3RyaXBfaGVhZCB0b2dnbGVsZWZ0IG1iLTRcIj5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJyZXBvcnRfaGVhZCBmb250LXdlaWdodC1ib2xkXCI+Q2hhbmdlIFBhc3N3b3JkPC9zcGFuPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IFtmb3JtR3JvdXBdPVwicmVzZXRQYXNzd29yZEZvcm1cIiBjbGFzcz1cInJlc2V0LXBhc3N3b3JkLWRpdlwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1mbHVpZCBwLWZvcm1ncmlkIHJvd1wiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIGNvbC14bC00IGNvbC1sZy0xMiBjb2wtc20tNCBjb2wtbWQtMTIgY29sLTEyIG1iLTNcIj5cclxuICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJtYWlsaWRcIiBhcmlhLWRlc2NyaWJlZGJ5PVwibWFpbGlkXCI+RW1haWwgPHNwYW4gY2xhc3M9XCJyZXF1aXJlZGZpZWxkXCI+Kjwvc3Bhbj48L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcmVhZG9ubHk9XCJ0cnVlXCIgaWQ9XCJtYWlsaWRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIGZvcm1Db250cm9sTmFtZT1cIm1haWxpZFwiXHJcbiAgICAgICAgICAgICAgICAgIHBJbnB1dFRleHQgLz5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZsdWlkIHAtZm9ybWdyaWQgcm93XCI+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMiBtYi0zXCI+XHJcbiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiY3Bhc3N3b3JkXCIgYXJpYS1kZXNjcmliZWRieT1cImNwYXNzd29yZFwiPkN1cnJlbnQgUGFzc3dvcmQgPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInJlcXVpcmVkZmllbGRcIj4qPC9zcGFuPjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICA8cC1wYXNzd29yZCBhcHBCbG9ja2N1dGNvcHlwYXN0ZSBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCIgaW5wdXRJZD1cImNwYXNzd29yZFwiXHJcbiAgICAgICAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImN1cnJlbnRwYXNzd29yZFwiIFt0b2dnbGVNYXNrXT1cInRydWVcIiBbZmVlZGJhY2tdPVwiZmFsc2VcIj5cclxuICAgICAgICAgICAgICAgIDwvcC1wYXNzd29yZD5cclxuICAgICAgICAgICAgICAgIDxzbWFsbCAqbmdJZj1cIlxyXG4gICAgICAgICAgICAgICAgICAgIHJlc2V0Rm9ybWNvbnRyb2xzWydjdXJyZW50cGFzc3dvcmQnXS5oYXNFcnJvcigncmVxdWlyZWQnKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIHJlc2V0Rm9ybWNvbnRyb2xzWydjdXJyZW50cGFzc3dvcmQnXS50b3VjaGVkXHJcbiAgICAgICAgICAgICAgICAgIFwiIGNsYXNzPVwicC1lcnJvciBibG9ja1wiPlxyXG4gICAgICAgICAgICAgICAgICBSZXF1aXJlZFxyXG4gICAgICAgICAgICAgICAgPC9zbWFsbD5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgY29sLXhsLTQgY29sLWxnLTYgY29sLXNtLTQgY29sLW1kLTEyIGNvbC0xMiBtYi0zIHBvc2l0aW9uLXJlbGF0aXZlXCI+XHJcbiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwibnBhc3N3b3JkXCIgYXJpYS1kZXNjcmliZWRieT1cIm5wYXNzd29yZFwiPk5ldyBQYXNzd29yZCA8c3BhblxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicmVxdWlyZWRmaWVsZFwiPio8L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxwLXBhc3N3b3JkIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIiBhcHBCbG9ja2N1dGNvcHlwYXN0ZSBpbnB1dElkPVwibnBhc3N3b3JkXCJcclxuICAgICAgICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwibmV3cGFzc3dvcmRcIiBbdG9nZ2xlTWFza109XCJ0cnVlXCIgW2ZlZWRiYWNrXT1cImZhbHNlXCI+XHJcbiAgICAgICAgICAgICAgICA8L3AtcGFzc3dvcmQ+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXV0b3N1Z2dlc3RcIiAqbmdJZj1cImlzVmFsaWRcIj5cclxuICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgcmVzZXRGb3JtY29udHJvbHNbJ25ld3Bhc3N3b3JkJ10uaGFzRXJyb3IoJ3JlcXVpcmVkJykgJiYgcmVzZXRGb3JtY29udHJvbHNbJ25ld3Bhc3N3b3JkJ10udG91Y2hlZFxyXG4gICAgICAgICAgICAgICAgICAgIFwiIGNsYXNzPVwicC1lcnJvciBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1iLTJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9XCJwaSBwaS10aW1lcy1jaXJjbGUgbXItMVwiPjwvZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPlJlcXVpcmVkPC9zbWFsbD5cclxuICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWVycm9yIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgbWItMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJyZXNldEZvcm1jb250cm9sc1snbmV3cGFzc3dvcmQnXS5oYXNFcnJvcignaGFzTnVtYmVyJylcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9XCJwaSBwaS10aW1lcy1jaXJjbGUgbXItMVwiPjwvZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPnt7IGVycm9yc1swXSB9fTwvc21hbGw+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1lcnJvciBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1iLTJcIlxyXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwicmVzZXRGb3JtY29udHJvbHNbJ25ld3Bhc3N3b3JkJ10uaGFzRXJyb3IoJ2hhc0NhcGl0YWxDYXNlJylcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9XCJwaSBwaS10aW1lcy1jaXJjbGUgbXItMVwiPjwvZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPnt7IGVycm9yc1syXSB9fTwvc21hbGw+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1lcnJvciBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1iLTJcIlxyXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwicmVzZXRGb3JtY29udHJvbHNbJ25ld3Bhc3N3b3JkJ10uaGFzRXJyb3IoJ2hhc1NtYWxsQ2FzZScpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGVtIGNsYXNzPVwicGkgcGktdGltZXMtY2lyY2xlIG1yLTFcIj48L2VtPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzbWFsbD57eyBlcnJvcnNbM10gfX08L3NtYWxsPlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPVwicC1lcnJvciBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1iLTJcIlxyXG4gICAgICAgICAgICAgICAgICAgICpuZ0lmPVwicmVzZXRGb3JtY29udHJvbHNbJ25ld3Bhc3N3b3JkJ10uaGFzRXJyb3IoJ2hhc1NwZWNpYWxDaGFyYWN0ZXJzJylcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9XCJwaSBwaS10aW1lcy1jaXJjbGUgbXItMVwiPjwvZW0+XHJcbiAgICAgICAgICAgICAgICAgICAge3sgZXJyb3JzWzFdIH19XHJcbiAgICAgICAgICAgICAgICAgIDwvc21hbGw+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWVycm9yIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgbWItMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCJyZXNldEZvcm1jb250cm9sc1snbmV3cGFzc3dvcmQnXS5oYXNFcnJvcignbWlubGVuZ3RoJylcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZW0gY2xhc3M9XCJwaSBwaS10aW1lcy1jaXJjbGUgbXItMVwiPjwvZW0+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPnt7IGVycm9yc1s0XSB9fTwvc21hbGw+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIGNvbC14bC00IGNvbC1sZy02IGNvbC1zbS00IGNvbC1tZC0xMiBjb2wtMTIgbWItMlwiPlxyXG4gICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNuZnBhc3N3b3JkXCIgYXJpYS1kZXNjcmliZWRieT1cImNuZnBhc3N3b3JkXCI+Q29uZmlybSBQYXNzd29yZCA8c3BhblxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicmVxdWlyZWRmaWVsZFwiPio8L3NwYW4+PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxwLXBhc3N3b3JkIGFwcEJsb2NrY3V0Y29weXBhc3RlIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIiBpbnB1dElkPVwiY25mcGFzc3dvcmRcIlxyXG4gICAgICAgICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJjb25mb3JtcGFzc3dvcmRcIiBbdG9nZ2xlTWFza109XCJ0cnVlXCIgW2ZlZWRiYWNrXT1cImZhbHNlXCI+XHJcbiAgICAgICAgICAgICAgICA8L3AtcGFzc3dvcmQ+XHJcbiAgICAgICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzZXRGb3JtY29udHJvbHNbJ2NvbmZvcm1wYXNzd29yZCddLmhhc0Vycm9yKCdyZXF1aXJlZCcpICYmXHJcbiAgICAgICAgICAgICAgICAgICAgcmVzZXRGb3JtY29udHJvbHNbJ2NvbmZvcm1wYXNzd29yZCddLnRvdWNoZWRcclxuICAgICAgICAgICAgICAgICAgXCIgY2xhc3M9XCJwLWVycm9yIGJsb2NrXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxzbWFsbD5SZXF1aXJlZDwvc21hbGw+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWVycm9yIGJsb2NrXCIgKm5nSWY9XCJcclxuICAgICAgICAgICAgICAgICAgICByZXNldEZvcm1jb250cm9sc1snY29uZm9ybXBhc3N3b3JkJ10uaGFzRXJyb3IoJ05vUGFzc3N3b3JkTWF0Y2gnKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgIHJlc2V0Rm9ybWNvbnRyb2xzWydjb25mb3JtcGFzc3dvcmQnXS50b3VjaGVkXHJcbiAgICAgICAgICAgICAgICAgIFwiPlxyXG4gICAgICAgICAgICAgICAgICA8c21hbGw+UGFzc3dvcmQgRG9lcyBub3QgbWF0Y2g8L3NtYWxsPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbWQtMTIgbXQtMiB0ZXh0LXJpZ2h0XCI+XHJcbiAgICAgICAgICAgICAgPHAtYnV0dG9uIGxhYmVsPVwiU2F2ZSBDaGFuZ2VzXCIgc3R5bGVDbGFzcz1cInB4LTMgcHktMVwiIChjbGljayk9XCJjaGFuZ2VQYXNzd29yZCgpXCJcclxuICAgICAgICAgICAgICAgIFtkaXNhYmxlZF09XCJyZXNldFBhc3N3b3JkRm9ybS5pbnZhbGlkXCI+PC9wLWJ1dHRvbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj4gLS0+XHJcbiAgICAgICAgPCEtLSBUYWIgRW5kIC0tPlxyXG5cclxuICAgICAgICA8IS0tIFRoZW1lIEN1c3RvbWl6ZXIgVGFiIC0tPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWItcGFuZSBmYWRlXCIgaWQ9XCJ0aGVtZV90YWJcIiBbY2xhc3MuYWN0aXZlXT1cImlzVGhlbWVBY3RpdmVcIiBbY2xhc3Muc2hvd109XCJpc1RoZW1lU2hvd25cIiByb2xlPVwidGFicGFuZWxcIiBhcmlhLWxhYmVsbGVkYnk9XCJ2LXRoZW1lLWFcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdHJpcF9oZWFkIHRvZ2dsZWxlZnQgbWItNFwiPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInJlcG9ydF9oZWFkIGZvbnQtd2VpZ2h0LWJvbGRcIj5UaGVtZSBDdXN0b21pemVyPC9zcGFuPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3VzdG9taXplciBjdXN0b21pemVyLXN0eWxpbmcgcHQtM1wiPlxyXG4gICAgICAgICAgICA8IS0tIFNraW4gLS0+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjdXN0b21pemVyLXN0eWxpbmctc2tpbiBza2luIG1iLTRcIj5cclxuICAgICAgICAgICAgICA8aDYgY2xhc3M9XCJmb250LXdlaWdodC1ib2xkIG1iLTJcIj5Ta2luPC9oNj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IHRoZW1lIG9mIHRoZW1lc1wiIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wgY3VzdG9tLXJhZGlvIG1yLTRcIj5cclxuICAgICAgICAgICAgICAgICAgPGZpZ3VyZSBbbmdDbGFzc109XCJzZWxlY3RlZFRoZW1lID09PSB0aGVtZS5rZXkgPyAnYWN0aXZlJyA6ICcnXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHJvbGU9XCJsaW5rXCIgY2xhc3M9XCJtYi0wIHRoZW1lLXNlbGVjdFwiIGZvcj1cInRoZW1lX3t7IHRoZW1lLmtleSB9fVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCJ7eyB0aGVtZS5pbWFnZSB9fVwiIGNsYXNzPVwiaW1nLWZsdWlkXCIgYWx0PVwie3sgdGhlbWUubmFtZSB9fVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8ZmlnY2FwdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBpZD1cInRoZW1lX3t7IHRoZW1lLmtleSB9fVwiIG5hbWU9XCJ7eyB0aGVtZS5uYW1lIH19XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjdXN0b20tY29udHJvbC1pbnB1dCBsYXlvdXQtbmFtZVwiIFt2YWx1ZV09XCJ0aGVtZS5rZXlcIiBbKG5nTW9kZWwpXT1cInNlbGVjdGVkVGhlbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBbbmdNb2RlbE9wdGlvbnNdPVwieyBzdGFuZGFsb25lOiB0cnVlIH1cIiAoY2xpY2spPVwic2V0VGhlbWUodGhlbWUua2V5KVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjdXN0b20tY29udHJvbC1sYWJlbCBtdC0yXCIgZm9yPVwidGhlbWVfe3sgdGhlbWUua2V5IH19XCI+e3sgdGhlbWUubmFtZSB9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9maWdjYXB0aW9uPlxyXG4gICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz1cImN1c3RvbWl6ZXItc3R5bGluZy1za2luIGQtbm9uZSBtYi0zXCI+XHJcbiAgICAgICAgICAgICAgPGg2IGNsYXNzPVwiZm9udC13ZWlnaHQtYm9sZCBtYi0yXCI+Rm9udDwvaDY+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2ICpuZ0Zvcj1cImxldCBmb250U2V0IG9mIGZvbnRTZXRMaXN0XCIgY2xhc3M9XCJjdXN0b20tY29udHJvbCBjdXN0b20tcmFkaW8gbXItNFwiPlxyXG4gICAgICAgICAgICAgICAgICA8ZmlndXJlIFtuZ0NsYXNzXT1cInNlbGVjdGVkRm9udCA9PT0gZm9udFNldC5rZXkgPyAnYWN0aXZlJyA6ICcnXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImZvbnRfe3sgZm9udFNldC5rZXkgfX1cIiBjbGFzcz1cImZvbnQtYm94IG1iLTAgdGhlbWUtc2VsZWN0XCI+IEFhIDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGZpZ2NhcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgaWQ9XCJmb250X3t7IGZvbnRTZXQua2V5IH19XCIgbmFtZT1cInt7IGZvbnRTZXQubmFtZSB9fVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY3VzdG9tLWNvbnRyb2wtaW5wdXQgbGF5b3V0LW5hbWVcIiBbdmFsdWVdPVwiZm9udFNldC5rZXlcIiBbKG5nTW9kZWwpXT1cInNlbGVjdGVkRm9udFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFtuZ01vZGVsT3B0aW9uc109XCJ7IHN0YW5kYWxvbmU6IHRydWUgfVwiIChjbGljayk9XCJzZXRGb250KGZvbnRTZXQua2V5KVwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjdXN0b20tY29udHJvbC1sYWJlbCBtdC0yXCIgZm9yPVwiZm9udF97eyBmb250U2V0LmtleSB9fVwiPnt7IGZvbnRTZXQubmFtZSB9fTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9maWdjYXB0aW9uPlxyXG4gICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj4gLS0+XHJcblxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3VzdG9taXplci1zdHlsaW5nLXNraW4gbWItM1wiPlxyXG4gICAgICAgICAgICAgIDxoNiBjbGFzcz1cImZvbnQtd2VpZ2h0LWJvbGQgbWItMlwiPkZvbnQgU2l6ZSAoPHNwYW4gaWQ9XCJycy1idWxsZXRcIiBjbGFzcz1cInJzLWxhYmVsXCI+e3tzZWxlY3RlZEZvbnR9fTwvc3Bhbj4pPC9oNj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIgY29sLWxnLTQgY29sLW1kLTQgY29sLTEyIHAtMFwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN1c3RvbS1jb250cm9sIGN1c3RvbS1yYWRpbyB3LTEwMCBtci00XCI+XHJcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyYW5nZS1zbGlkZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9XCJycy1yYW5nZS1saW5lXCIgY2xhc3M9XCJycy1yYW5nZVwiIHR5cGU9XCJyYW5nZVwiICNyZWYgdmFsdWU9XCJ7e3NlbGVjdGVkRm9udH19XCIgbWluPVwiMTNcIiBtYXg9XCIyMFwiICAgW25nTW9kZWxPcHRpb25zXT1cInsgc3RhbmRhbG9uZTogdHJ1ZSB9XCIgWyhuZ01vZGVsKV09XCJzZWxlY3RlZEZvbnRcIiAoY2hhbmdlKT1cInNldFJhbmdlRm9udChyZWYudmFsdWUpXCI+XHJcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYm94LW1pbm1heFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPjEzPC9zcGFuPjxzcGFuPjIwPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJwdWxsLXJpZ2h0IG1yLTIgbWItMiBidG4gYnRuLXByaW1hcnkgYnRuY29tbW9uXCIgKGNsaWNrKT1cInVwZGF0ZVN0eWxpbmcoKVwiPlNhdmUgQ2hhbmdlczwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIFxyXG4gICAgICAgIDwhLS0gVGFiIEVuZCAtLT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9kaXY+XHJcbjxkaXYgY2xhc3M9XCJtb2RhbFwiIGlkPVwiRGVsZXRldXNlclwiIHRhYmluZGV4PVwiLTFcIiByb2xlPVwiZGlhbG9nXCI+XHJcbiAgPGRpdiBjbGFzcz1cIm1vZGFsLWRpYWxvZ1wiIHJvbGU9XCJkb2N1bWVudFwiPlxyXG4gICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnRcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWhlYWRlclwiPlxyXG4gICAgICAgIDxoNSBjbGFzcz1cIm1vZGFsLXRpdGxlXCI+RGVsZXRlIFByb2ZpbGUgSW1hZ2U8L2g1PlxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xvc2VcIiBkYXRhLWRpc21pc3M9XCJtb2RhbFwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiPlxyXG4gICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XHJcbiAgICAgICAgQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGUgUHJvZmlsZSBJbWFnZT9cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2xlYXJmaXhcIj48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibXQtMlwiPlxyXG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cInB1bGwtcmlnaHQgbWItMiBidG4gYnRuLXByaW1hcnkgYnRuY29tbW9uIGRlbGV0ZVwiIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCIgKGNsaWNrKT1cInJlbW92ZVRodW1ibmFpbCgpXCI+XHJcbiAgICAgICAgICAgIERlbGV0ZVxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwicHVsbC1yaWdodCBtYi0yIG1yLTIgYnRuIGJnLXdoaXRlIHRleHQtcHJpbWFyeSBidG5jYW5jZWxcIiBkYXRhLWRpc21pc3M9XCJtb2RhbFwiPkNhbmNlbDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjbGVhcmZpeFwiPjwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuXHJcbjxkaXYgY2xhc3M9XCJtb2RhbFwiIGlkPVwiVXBkYXRlVXNlclRoZW1lXCIgdGFiaW5kZXg9XCItMVwiIHJvbGU9XCJkaWFsb2dcIj5cclxuICA8ZGl2IGNsYXNzPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XHJcbiAgICAgICAgPGg1IGNsYXNzPVwibW9kYWwtdGl0bGVcIj5VcGRhdGUgVGhlbWU8L2g1PlxyXG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xvc2VcIiBkYXRhLWRpc21pc3M9XCJtb2RhbFwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiPlxyXG4gICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1ib2R5XCI+XHJcbiAgICAgICAgQXJlIHlvdSBzdXJlIHRvIHNhdmUgYW5kIGNvbnRpbnVlIHdpdGggdGhlIHJlY2VudCBjaGFuZ2VzP1xyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjbGVhcmZpeFwiPjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJtdC0yXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwicHVsbC1yaWdodCBtYi0yIGJ0biBidG4tcHJpbWFyeSBidG5jb21tb24gZGVsZXRlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiAoY2xpY2spPVwidXBkYXRlVGhlbWVQb3B1cCgpXCI+XHJcbiAgICAgICAgICAgIFllc1xyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwicHVsbC1yaWdodCBtYi0yIG1yLTIgYnRuIGJnLXdoaXRlIHRleHQtcHJpbWFyeSBidG5jYW5jZWxcIiBkYXRhLWRpc21pc3M9XCJtb2RhbFwiIChjbGljayk9XCJjYW5jbGVUaGVtZVBvcHVwKClcIj5ObzwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjbGVhcmZpeFwiPjwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L2Rpdj4iXX0=